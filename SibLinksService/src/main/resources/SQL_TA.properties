GET_NEWEST_QUESTION = SELECT Q.pid, Q.authorID, Q.title, (C.subject) subject, Q.content, Q.numViews, Q.numReplies, UNIX_TIMESTAMP(Q.timeStamp), Q.visible, Q.imagePath FROM Sib_Forum_Post Q INNER JOIN Sib_Category C ON Q.subjectId = C.subjectId AND C.active = 'A' ORDER BY timestamp DESC  LIMIT ? OFFSET ?;

GET_NEWEST_QUESTION_BY_SUBJECT = SELECT P.pid, P.authorID, C.subject, P.title, P.content, P.numViews, P.numReplies, UNIX_TIMESTAMP(P.timeStamp) time FROM Sib_Forum_Post P INNER JOIN Sib_Category C ON C.subjectId = P.subjectId INNER JOIN Sib_Users U ON U.userType = 'S' AND U.userid = P.authorID AND U.userid = ? 
#GET_NEWEST_QUESTION_BY_SUBJECT = SELECT P.pid, P.authorID, S.subject, P.title, P.content, P.numViews, P.numReplies, UNIX_TIMESTAMP(P.timeStamp) time FROM Sib_Forum_Post P INNER JOIN Sib_Subject S ON S.subjectId = P.subjectId INNER JOIN Sib_Users U ON U.userType = 'M' AND U.userid = ? WHERE P.subjectId IN(?) ORDER BY P.timeStamp DESC LIMIT ?,?;

GET_USER_SUBJECT = SELECT defaultSubjectId FROM Sib_Users WHERE userid = ?;

GET_VIDEO_BY_VIEW = SELECT V.vid, CONCAT(U.firstName, ' ', U.lastName) name, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid ORDER BY numViews DESC LIMIT ? OFFSET ?;

GET_VIDEO_VIEW_BY_SUBJECT = SELECT V.vid, CONCAT(U.firstName, ' ', U.lastName) name, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid AND V.subjectId= ? ORDER BY numViews DESC LIMIT ? OFFSET ?;

GET_NEWEST_VIDEO_BY_SUBJECT = SELECT V.vid, CONCAT(U.firstName, ' ', U.lastName) name, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid AND  

GET_VIDEO_BY_SUBJECT = SELECT V.vid, C.subject, CONCAT(U.firstName, ' ', U.lastName) name, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.subjectId,  V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid LEFT JOIN Sib_Category C ON C.subjectId = V.subjectId  

GET_VIDEO_PLAYLIST_NEWEST = SELECT sv.vid, sv.authorID as authorID, sv.image ,sv.url, concat(su.firstName,' ', su.lastName) name, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv.timeStamp) `timeStamp`, sv.runningTime, '1' type FROM Sib_Videos sv, Sib_Users su  WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid= sv.vid AND sp.status='A') AND sv.authorID=su.userid AND sv.videoEnable='Y' UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, concat(su.firstName,' ', su.lastName) name ,  sp.`Name` title, null numRatings, null numComments, sp.subjectId, null averageRating,  null numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`,null runningTime, '2' type FROM Sib_PlayList sp, Sib_Users su WHERE sp.CreateBy=su.userid AND EXISTS (select 1 from Sib_PlayList_Videos spv where sp.plid = spv.plid) AND sp.`Status`='A' ORDER BY timeStamp DESC LIMIT ? OFFSET ?;

GET_VIDEO_PLAYLIST_NEWEST_BY_USER_SUBS = SELECT sv.vid, sv.authorID as authorID, sv.image ,sv.url, concat(su.firstName,' ', su.lastName) name, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv.timeStamp) `timeStamp`, sv.runningTime, '1' type FROM Sib_Videos sv, Sib_Users su  WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid= sv.vid AND sp.status='A') AND sv.authorID=su.userid AND sv.videoEnable='Y' AND su.userid= ? AND sv.subjectId = ? UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, concat(su.firstName,' ', su.lastName) name ,  sp.`Name` title, null numRatings, null numComments, sp.subjectId, null averageRating,  null numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`,null runningTime, '2' type FROM Sib_PlayList sp, Sib_Users su WHERE sp.CreateBy=su.userid AND EXISTS (select 1 from Sib_PlayList_Videos spv where sp.plid = spv.plid) AND sp.`Status`='A' and su.userid= ? AND sp.subjectId = ? ORDER BY timeStamp DESC LIMIT ? OFFSET ?;

GET_VIDEO_PLAYLIST_NEWEST_BY_SUBJECT = SELECT sv.vid, sv.authorID as authorID, sv.image ,sv.url, concat(su.firstName,' ', su.lastName) name, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv.timeStamp) `timeStamp`, sv.runningTime, '1' type FROM Sib_Videos sv, Sib_Users su  WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid= sv.vid AND sp.status='A') AND sv.authorID=su.userid AND sv.videoEnable='Y' AND sv.subjectId = ? UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, concat(su.firstName,' ', su.lastName) name ,  sp.`Name` title, null numRatings, null numComments, sp.subjectId, null averageRating,  null numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`,null runningTime, '2' type FROM Sib_PlayList sp, Sib_Users su WHERE sp.CreateBy=su.userid AND EXISTS (select 1 from Sib_PlayList_Videos spv where sp.plid = spv.plid) AND sp.`Status`='A' AND sp.subjectId = ? ORDER BY timeStamp DESC LIMIT ? OFFSET ?;

GET_VIDEO_STUDENT_SUBCRIBE = SELECT S.MentorId, CONCAT(U.firstName,' ',U.lastName) userName, V.vid, V.title, V.authorID, V.description, V.image, V.url, V.runningTime, V.subjectId, V.numViews, V.numRatings, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' INNER JOIN Sib_Videos V ON S.MentorId = V.authorID AND V.videoEnable = 'Y' WHERE S.StudentId = ? AND S.Subcribe = 'Y' LIMIT ? OFFSET ?;

FIND_STUDENT_SUBCRIBE = SELECT *  FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.StudentId = U.userId  WHERE S.StudentId = ?  AND S.MentorId = ?;

SUBCRIBE_VIDEO_STUDENT = INSERT INTO Sib_Student_Subcribe (`StudentId`, `MentorId`, `Subcribe`) VALUES (?, ?, 'Y');

UN_SUBCRIBE_VIDEO_STUDENT = UPDATE Sib_Student_Subcribe SET Subcribe = 'N' WHERE StudentId = ? AND MentorId = ? ;

UPDATE_SUBCRIBE_VIDEO_STUDENT = UPDATE Sib_Student_Subcribe SET Subcribe = 'Y' WHERE StudentId = ? AND MentorId = ?;

CREATE_NOTIFICATION_SUBCRIBE= INSERT INTO Sib_Notification(userId, authorId, type, title, notification, timestamp, status) VALUES (?, ?, ?, ?, ?, now(), 'N');

GET_NAME_USER = SELECT CONCAT( U.firstName,' ',U.lastName) userName from Sib_Users U where userId = ?;

SELECT_SUBCRIBE=SELECT * FROM Sib_Student_Subcribe WHERE StudentId = ? AND MentorId = ? AND Subcribe = 'Y';

GET_COUNT_VIDEO_WATCHED = SELECT COUNT(*) AS countOfNumbers FROM Sib_User_Watch_Video WHERE uid = ?;

GET_COUNT_VIDEO_SUBCRIBE = SELECT COUNT(*) AS countOfNumbers FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON U.userId = S.MentorId AND U.userType = 'M' WHERE StudentId = ? AND Subcribe = 'Y';

GET_COUNT_VIDEO_LIKE = SELECT COUNT(*) AS countOfNumbers FROM Sib_Video_Like WHERE uid = ?;

GET_MENTOR_SUBCRIBED = SELECT CONCAT(U.firstName,' ',U.lastName) MentorName, S.MentorId FROM Sib_Student_Subcribe S Inner Join Sib_Users U ON S.MentorId = U.userid AND S.Subcribe = 'Y' WHERE S.StudentId = ?;

GET_COUNT_CATEGORY_HOME = SELECT (SELECT count(*) FROM Sib_Video_History WHERE uid = ?) as video_watched, (SELECT count(*) FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' WHERE StudentId=? AND Subcribe = 'Y') as subcribed, (SELECT count(*) FROM Sib_Video_Favourite WHERE uid=?) as video_like;

GET_VIDEO_NOT_WATCH = SELECT sv.authorID, count(*) as not_view FROM Sib_Videos as sv LEFT JOIN Sib_User_Watch_Video as suw ON sv.vid = suw.vid WHERE sv.authorID IN (SELECT S.MentorId as authorID FROM Sib_Student_Subcribe S Inner Join Sib_Users U ON S.MentorId = U.userid AND S.Subcribe = 'Y' WHERE S.StudentId = ?) AND suw.uid != ? OR suw.uid IS NULL GROUP BY sv.authorID;

#GET_NEW_VIDEO_MENTOR_SUBSCRIBED = SELECT SSS.MentorId, SU.imageUrl, CONCAT(SU.firstName,' ',SU.lastName) mentorName, IF(newViewVideo, LENGTH(newViewVideo) - LENGTH(REPLACE(newViewVideo, ',', '')) + 1, 0) AS values_count FROM Sib_Users SU INNER JOIN Sib_Student_Subcribe SSS ON (SU.userid=SSS.MentorId AND SSS.SUbcribe='Y' AND SU.userType ='M' AND SSS.StudentId = ?);
GET_NEW_VIDEO_MENTOR_SUBSCRIBED = SELECT S.MentorId, CONCAT(U.firstName,' ',U.lastName) userName, V.vid, V.title, V.authorID, V.description, V.image, V.url, V.runningTime, V.subjectId, V.numViews, V.numRatings, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' INNER JOIN Sib_Videos V ON S.MentorId = V.authorID AND V.videoEnable = 'Y' 

GET_NEW_VIDEO_PLAYLIST_MENTOR_SUBSCRIBED_BY_SUB = SELECT sv.vid, sv.authorID AS authorID, sv.image, sv.url, concat( su.firstName, ' ', su.lastName ) NAME, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type FROM Sib_Videos sv, Sib_Users su WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp. STATUS = 'A' ) AND sv.authorID = su.userid AND sv.videoEnable = 'Y' AND su.userid IN(SELECT MentorId FROM Sib_Student_Subcribe WHERE StudentId = ? AND Subcribe = 'Y') AND sv.subjectId = ? UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, concat( su.firstName, ' ', su.lastName ) NAME, sp.`Name` title, NULL numRatings, NULL numComments, sp.subjectId, NULL averageRating, NULL numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`, NULL runningTime, '2' type FROM Sib_PlayList sp, Sib_Users su WHERE sp.CreateBy = su.userid AND EXISTS ( SELECT 1 FROM Sib_PlayList_Videos spv WHERE sp.plid = spv.plid ) AND sp.`Status` = 'A' AND su.userid IN(SELECT MentorId FROM Sib_Student_Subcribe WHERE StudentId = ? AND Subcribe = 'Y') AND sp.subjectId = ? ORDER BY TIMESTAMP DESC LIMIT ? OFFSET ?

GET_VIDEO_BY_RATING = SELECT V.authorID, V.vid, V.title, V.image, V.url, V.numViews, V.numRatings, V.averageRating, V.numComments FROM Sib_Videos V ORDER BY V.numViews desc, V.numRatings desc, V.numComments desc LIMIT ? OFFSET ?;

GET_MENTOR_STUDENT_SUBSCRIBED = SELECT U.userid, U.defaultSubjectId, AVG(V.averageRating) avgrate, GROUP_CONCAT(C.subject) as subjects, CONCAT(U.firstName, ' ', U.lastName) as name, U.imageUrl, U.accomplishments, UNIX_TIMESTAMP(U.bod) birthDay, U.gender, U.bio, U.description, U.isOnline FROM Sib_Category C INNER JOIN Sib_Users U ON FIND_IN_SET(C.subjectId, U.defaultSubjectId) > 0 AND U.userid IN(SELECT MentorId FROM Sib_Student_Subcribe Where StudentId = ? AND Subcribe = 'Y') AND U.userType = 'M' LEFT JOIN Sib_Videos V ON V.authorID = U.userid GROUP BY U.userid, U.defaultSubjectId,  U.firstName, U.lastName, U.imageUrl LIMIT ? OFFSET ?;

GET_COUNT_INFO_MENTOR = SELECT (SELECT count(*) FROM Sib_Forum_Answer WHERE authorID = ? AND enableFlag = 'Y') as answered, (SELECT COUNT(*) AS countSubscribed FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON U.userId = S.MentorId AND U.userType = 'M' WHERE MentorId = ? AND Subcribe = 'Y') as subcribed, (SELECT count(*) FROM Sib_Videos WHERE authorID=?) as videos;

GET_MENTOR_SUBSCRIBED_VIDEO = SELECT SSS.MentorId, SU.imageUrl,  SU.defaultSubjectId, GROUP_CONCAT(C.subject) as subjects, CONCAT(SU.firstName,' ',SU.lastName) mentorName, IF(newViewVideo, LENGTH(newViewVideo) - LENGTH(REPLACE(newViewVideo, ',', '')) + 1, 0) AS values_count FROM Sib_Category C INNER JOIN Sib_Users SU ON FIND_IN_SET(C.subjectId, SU.defaultSubjectId) > 0 AND SU.userid IN(SELECT MentorId FROM Sib_Student_Subcribe Where StudentId = ? AND Subcribe = 'Y') AND SU.userType = 'M' INNER JOIN Sib_Student_Subcribe SSS ON (SU.userid=SSS.MentorId AND SSS.SUbcribe='Y' AND SU.userType ='M' AND SSS.StudentId = ?) GROUP BY SSS.MentorId, SU.userid, SU.imageUrl, SU.defaultSubjectId,  SU.firstName, SU.lastName, SSS.newViewVideo LIMIT ? OFFSET ?;

VIDEO_RECOMMENDED_FOR_YOU = SELECT U.userid, CONCAT(U.firstName, ' ', U.lastName) name, U.imageUrl, U.defaultSubjectId, U.isOnline, V.vid, V.runningTime, V.averageRating, V.numComments, V.subjectId, V.title, V.image, V.url, V.numViews, UNIX_TIMESTAMP(V.timeStamp) as timeStamp , count(sss.StudentId) as countSubscribe FROM Sib_Users  U INNER JOIN Sib_Videos V ON V.authorID = U.userid LEFT  JOIN Sib_Student_Subcribe sss ON (U.userid=sss.MentorId and sss.Subcribe='Y') WHERE NOT EXISTS(SELECT *  FROM Sib_Student_Subcribe S WHERE S.StudentId = ? AND S.Subcribe = 'Y'  AND U.userid = S.MentorId) AND U.userType='M' GROUP BY U.userid, name, U.imageUrl, U.defaultSubjectId, U.isOnline, V.vid, V.runningTime, V.averageRating, V.numComments,  V.subjectId, V.title, V.image, V.url, V.numViews, timeStamp  ORDER BY V.timeStamp DESC;

GET_VIDEO_WITH_SUBJECT_ID = SELECT sv.vid, sv.authorID as authorID, sv.image ,sv.url, concat(su.firstName,' ', su.lastName) name, sv.title, sv.numRatings, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv.timeStamp) `timeStamp`, sv.videoEnable  FROM Sib_Videos sv, Sib_Users su  WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid= sv.vid AND sp.status='A') AND sv.authorID=su.userid AND sv.videoEnable='Y' AND sv.subjectId = ? UNION ALL SELECT sv.vid,  sp.`CreateBy` authorID, sp.Image, sp.url, concat(su.firstName,' ', su.lastName) name , sp.`Name` title, sp.NumRate numRatings, sp.subjectId, sp.AverageRate averageRating, sp.`NumView` numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`,sv.videoEnable FROM  Sib_PlayList sp , Sib_PlayList_Videos spv, Sib_Videos sv, Sib_Users su WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp.CreateBy=su.userid AND sv.videoEnable='Y' AND sp.`Status`='A' AND sv.subjectId = ? ORDER BY timeStamp DESC LIMIT ? OFFSET ?;

VIDEO_RECOMMENDED_FOR_YOU_WITH_SUB_ID = SELECT U.userid, CONCAT(U.firstName, ' ', U.lastName) name, U.imageUrl, U.defaultSubjectId, V.vid, V.numViews, V.runningTime, V.averageRating, V.numComments, V.subjectId, V.title, V.image, V.url, V.numViews, UNIX_TIMESTAMP(V.timeStamp) as timeStamp , count(sss.StudentId) as countSubscribe, IF(sss.newViewVideo, LENGTH(sss.newViewVideo) - LENGTH(REPLACE(sss.newViewVideo, ',', '')) + 1, 0) AS values_count  FROM Sib_Users  U INNER JOIN Sib_Videos V ON V.authorID = U.userid AND V.subjectId = ?  LEFT  JOIN Sib_Student_Subcribe sss ON (U.userid=sss.MentorId and sss.Subcribe='Y') WHERE NOT EXISTS(SELECT *  FROM Sib_Student_Subcribe S WHERE S.StudentId = ? AND S.Subcribe = 'Y'  AND U.userid = S.MentorId) AND U.userType='M' GROUP BY U.userid, name, U.imageUrl, U.defaultSubjectId, V.vid, V.numViews, V.runningTime, V.averageRating, V.numComments,  V.subjectId, V.title, V.image, V.url, V.numViews, timeStamp, values_count  ORDER BY V.timeStamp DESC;

GET_MENU_BY_SUBJECT = SELECT subjectId, subject FROM Sib_Category WHERE level = 0 AND isForum = 0 ORDER BY subjectId ASC;

GET_ALL_MENTOR_SUBSCRIBED = SELECT U.userid, CONCAT(U.firstName, ' ', U.lastName) userName, U.accomplishments, U.imageUrl, U.isOnline, U.defaultSubjectId, (SELECT Count(*) from Sib_Forum_Answer WHERE authorID = S.MentorId ) numAnswers, (SELECT count(*) FROM Sib_Student_Subcribe Where MentorId = U.userid AND Subcribe = 'Y') numSubs FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.MentorId = U.userid AND U.userType = 'M'WHERE StudentId = ? AND S.Subcribe = 'Y' LIMIT ? OFFSET ?;

GET_STUDENT_SUBSCRIBED = SELECT U.userid, CONCAT(U.firstName, ' ', U.lastName) userName , U.school, SCD.name as schoolName, U.imageUrl, U.isOnline, U.defaultSubjectId FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.StudentId = U.userid AND U.userType = 'S' LEFT JOIN Sib_School_College_Degree SCD ON U.school = SCD.sch_colle_degree_id WHERE MentorId = ? AND S.Subcribe = 'Y' LIMIT ? OFFSET ?;

GET_ALL_SUBJECTID_CATEGORY = SELECT subjectId, parentId FROM Sib_Category WHERE active = 'A';

MENTOR_GET_ACTIVITY_OF_STUDENT = SELECT N.userId, CONCAT(U.firstName, ' ', U.lastName) userName, N.title, N.notification, UNIX_TIMESTAMP(N.`timestamp`) `timeStamp` FROM Sib_Notification N INNER JOIN Sib_Users U ON U.userid = N.userId WHERE N.authorId = ? ORDER BY N.timestamp DESC LIMIT ? OFFSET ?;

SEARCH_VIDEO = SELECT V.vid, CONCAT(U.firstName,' ',U.lastName) userName, V.title, V.authorID, V.image, V.url, V.averageRating, V.numComments, V.numViews, UNIX_TIMESTAMP(V.`timeStamp`) `timeStamp`, V.subjectId FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid 

SEARCH_PLAYLIST = SELECT PL.plid as pid, CONCAT(U.firstName, ' ', U.lastName) userName ,PL.`Name` as title, PL.url,PL.Description as description, PL.Image as image, PL.CreateBy as authorID, UNIX_TIMESTAMP(PL.CreateDate) as timeStamp, PL.subjectId, UNIX_TIMESTAMP(PL.UpdateDate) as timeUpdate FROM `Sib_PlayList` PL INNER JOIN Sib_Users U ON PL.CreateBy = U.userid 

GET_ALL_VIDEO = SELECT V.vid, CONCAT(U.firstName,' ',U.lastName) userName, V.title, V.authorID, V.image, V.averageRating, V.numComments, V.numViews, UNIX_TIMESTAMP(V.`timeStamp`) `timeStamp`, V.subjectId FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid WHERE V.videoEnable = 'Y';

GET_NEWEST_ANSWERS = SELECT A.aid, A.pid, A.authorID, A.content, UNIX_TIMESTAMP(A.`timeStamp`) `timeStamp`,(SELECT count(*) FROM Sib_Answer_like WHERE aid = A.aid AND likeAnswer = 'Y') numlikes FROM `Sib_Forum_Answer` A WHERE A.authorID = ? ORDER BY A.`timeStamp` DESC LIMIT ? OFFSET ?;

GET_SUBSCRIBED_FROM_MENTOR_VIEW_STUDENT = SELECT X.* FROM(SELECT U.userid, CONCAT(U.lastName,' ', U.firstName) userName,IFNULL(U.lastName,'')lastName, IFNULL(U.firstName,'')firstName, U.imageUrl, U.isOnline, (SELECT IFNULL(SUM(numLike),0) from Sib_Forum_Answer where authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe = 'Y' ) numsub ,COUNT(V.vid) as numvideos ,U.defaultSubjectId, U.accomplishments, U.bio, (SELECT Count(*) from Sib_Forum_Answer WHERE authorID = U.userid ) numAnswers,AVG(V.averageRating) avgrate ,(SELECT count(*) isSubs FROM Sib_Student_Subcribe where Subcribe ='Y' AND  MentorId = U.userid AND StudentId =?) isSubs FROM Sib_Users U LEFT JOIN Sib_Videos V ON U.userid = V.authorID WHERE U.userType = 'M' GROUP BY U.userid, U.lastName, U.imageUrl, U.firstName)X  ORDER BY X.numsub DESC LIMIT ? OFFSET ?;

CHECK_STUDENT_SUBSCRIBE = SELECT count(*) FROM `Sib_Student_Subcribe` Where StudentId = ? AND MentorId = ? AND Subcribe = 'Y';

ADMIN_UPDATE_PROFILE_MENTOR = UPDATE Sib_Users SET email=?, bod=?, firstName=?, lastName=?, school=?, defaultSubjectId=?, accomplishments=?, bio=?, enableFlag=? WHERE userid = ?;

SQL_CHECK_USER_EXISTS_BY_ID = SELECT userName, password FROM Sib_Users WHERE userid = ?;

UPDATE_INFO_ADMIN = UPDATE Sib_Users SET email=?, bod=?, firstName=?, lastName=?, password=?, enableFlag=? WHERE userid = ?;

SET_ENABLE_USER = UPDATE Sib_Users SET enableFlag = ? WHERE userid = ?;

UPDATE_ADMIN_INFO = UPDATE Sib_Users SET email=?, bod=?, firstName=?, lastName=?, enableFlag=? WHERE userid = ? AND userType = 'A';

GET_ALL_INFO_MENTOR_SUBSCRIBED = SELECT X.* FROM ( SELECT U.userid, CONCAT(U.lastName, ' ', U.firstName) userName, IFNULL(U.lastName, '') lastName, IFNULL(U.firstName, '') firstName, U.userName loginName, U.imageUrl, U.isOnline, ( SELECT count(authorID) FROM Sib_Answer_like L INNER JOIN Sib_Forum_Answer A ON L.aid = A.aid AND likeAnswer = 'Y' WHERE A.authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe WHERE U.userid = MentorId AND Subcribe = 'Y' ) numsub, COUNT(V.vid) AS numvideos, U.defaultSubjectId, U.accomplishments, U.bio, ( SELECT Count(*) FROM Sib_Forum_Answer WHERE authorID = U.userid ) numAnswers, AVG(V.averageRating) avgrate, ( SELECT count(*) isSubs FROM Sib_Student_Subcribe WHERE Subcribe = 'Y' AND MentorId = U.userid AND StudentId = ? ) isSubs FROM Sib_Users U LEFT JOIN Sib_Videos V ON U.userid = V.authorID WHERE U.userType = 'M' GROUP BY U.userid, U.lastName, U.imageUrl, U.firstName ) X WHERE X.isSubs = 1 ORDER BY X.numsub DESC LIMIT ? OFFSET ?;