GET_TOKEN_BY_USERID=SELECT token from Sib_Users where userid=? and enableFlag='Y';
GET_DATE_TIME = SELECT UNIX_TIMESTAMP(now()) as currentTime;
VIDEO_DATA_READ=SELECT * FROM Sib_Videos;
SIB_REGISTER_USER=insert into Sib_Users (userName, password, imageUrl, email) values (?, ?, ?, ?);
SIB_ADMIN_REGISTER_USER=INSERT INTO `Sib_Users` (`firstName`,`lastName`,`userName`, `password`, `userType`,`enableFlag`) VALUES (?, ?,?, ?, 'A', 'Y');
SIB_ADMIN_ADD_ANOTHER_ADMIN = insert into Sib_Users (userName, userType, firstName, lastName, password, dob, enableFlag) values (?, ?, ?, ?, ?, ?, ?);
SIB_ADMIN_ADD_ANOTHER_MENTOR = insert into Sib_Users (userName, userType, firstName, lastName, password, imageUrl, dob, bio, school, defaultSubjectId, accomplishments, enableFlag) values (?, ?, ?, ?, ?, "assets/images/noavartar.jpg", ?, ?, ?, ?, ?, ?);
SIB_REGISTER_USER_EXIST=SELECT userName from Sib_Users where userName=?;
SAVE_DEFAULT_SUBJECT=UPDATE Sib_Users SET defaultSubjectId = ? WHERE userid = ?;
GET_PROFILE=SELECT U.userid, U.username, U.usertype, U.firstname, U.lastName, U.imageUrl, U.school, SCD.`name` as schoolName, U.email, U.description, AVG(V.averageRating) avgrate, SUM(V.numRatings) numRatings, U.currentClass, U.accomplishments, U.bio, UNIX_TIMESTAMP(U.`dob`) AS birthDay, UNIX_TIMESTAMP(U.`registrationTime`) registrationTime, UNIX_TIMESTAMP(U.`lastOnline`) lastOnline, U.defaultSubjectId, U.points, U.enableFlag, U.idFacebook, U.idGoogle, U.gender, U.favorite, U.isOnline FROM Sib_Users U LEFT JOIN Sib_Videos V ON userid = V.authorID LEFT JOIN Sib_School_College_Degree SCD ON U.school = SCD.sch_colle_degree_id WHERE userid = ?;
FIND_USER=SELECT username,usertype,firstname,lastName,imageUrl,school,currentClass,accomplishments,subjects,helpSubjects,bio from Sib_Users where  firstname=?;
UPDATELASTONLINETIME=update Sib_Users set token=?, lastonline=now(), isOnline=1 where username=?;
GET_USERS_BY_USER_TYPE=SELECT `Sib_Users`.`userid`,`Sib_Users`.`userName`,`Sib_Users`.`userType`,`Sib_Users`.`firstName`,`Sib_Users`.`lastName`,`Sib_Users`.`imageUrl`,`Sib_Users`.`school`,`Sib_Users`.`currentClass`,`Sib_Users`.`accomplishments`,`Sib_Users`.`subjects`,`Sib_Users`.`helpSubjects`,`Sib_Users`.`bio`,`Sib_Users`.`registrationTime`,`Sib_Users`.`lastOnline`,`Sib_Users`.`defaultSubjectId`,`Sib_Users`.`points`FROM `Sib_Users` WHERE userType=?;
GET_ALL_USERS=SELECT `Sib_Users`.`userid`,`Sib_Users`.`userName`,`Sib_Users`.`userType`,`Sib_Users`.`firstName`,`Sib_Users`.`lastName`,`Sib_Users`.`imageUrl`,`Sib_Users`.`school`,`Sib_Users`.`currentClass`,`Sib_Users`.`accomplishments`,`Sib_Users`.`bio`, UNIX_TIMESTAMP(`registrationTime`) registrationTime, UNIX_TIMESTAMP(`lastOnline`) lastOnline,`Sib_Users`.`defaultSubjectId`,`Sib_Users`.`points`,`Sib_Users`.`enableFlag`, UNIX_TIMESTAMP(`dob`) timeStamp,`Sib_Users`.`email` FROM `Sib_Users`;
GET_USER_BY_ID=SELECT userid, userName, userType, firstName, lastName, topMentor FROM Sib_Users WHERE topMentor = ?;
CHECK_USER=SELECT * FROM Sib_Users WHERE userName=?;
CREATE_USER_FACEBOOK=INSERT INTO Sib_Users(userName, userType, firstName, lastName, imageUrl, idFacebook, token, email, lastonline , isOnline) VALUES (?, ?, ?, ?, ?, ?, ?, ?, now(), 1);
UPDATE_INFO_FACEBOOK=UPDATE Sib_Users set token=?, lastonline = now(), isOnline=1 WHERE idFacebook = ?;
UPDATE_USER_LOGOUT=UPDATE Sib_Users set isOnline=0 WHERE userId = ?;
CREATE_USER_GOOGLE=INSERT INTO Sib_Users(userName, userType, firstName, lastName, imageUrl, idGoogle, token, email, lastonline , isOnline) VALUES (?, ?, ?, ?, ?, ?, ?, ?, now(), 1);
UPDATE_INFO_GOOGLE=UPDATE Sib_Users set token=?, lastonline = now(), isOnline=1 WHERE idGoogle = ?;
GET_USER_BY_USERNAME=SELECT *, UNIX_TIMESTAMP(`dob`) dob FROM Sib_Users WHERE userName = ?;
SIB_LOGIN_USER=SELECT userid, password, username, firstname, lastname, userType, defaultSubjectId, email from Sib_Users where username = ?
SIB_ADMIN_LOGIN_USER=SELECT userid from Sib_Users where  username=? and password=? AND userType = 'A';
SIB_RESET_PASSWORD= UPDATE Sib_Users set password =?, code=null where  code=?;
SIB_IS_USERNAME_AVAIBALE =SELECT userid from Sib_Users where  username=?;
SIB_INSERT_VIDEO=INSERT INTO Sib_Videos (title,author,authorID,subject,topic,subTopic,description,image,url,runningtime,timeStamp,topicId,subjectId,videoEnable) values (?,?,?,?,?,?,?,?,?,?,now(),?,?,'Y');
SIB_GET_VID=SELECT vid from Sib_Videos where subjectId=? and topicId=? and subTopic=?;
SIB_VIDEO_MENTORS_READ=SELECT userId,firstName,lastName,userName,points,school, imageUrl FROM Sib_Users where helpSubjects like (select concat(?,subject,?) from Sib_Subject where subjectId = ? ) and userType='M';
SIB_STUDENT_MENTORS=SELECT distinct mentorId, firstName, lastName, userName,school, points, imageUrl from Sib_Users su, Sib_Mentor_Reviewd_Student smrs where su.userId = smrs.mentorId and smrs.studentId = ? and su.userType = 'M' order by firstName;
GET_STUDENT_POST_LIST_PN=SELECT sfp.pid, subjectId, topicId, content, numViews, (SELECT COUNT(*) FROM Sib_Post_Like WHERE pid = sfp.pid AND likePost = 1) AS countLike FROM Sib_Forum_Post sfp  where authorID = ? group by sfp.pid, content, numViews ORDER BY sfp.pid DESC limit ?, ?;
GET_STUDENT_POST_LIST_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Post where authorID = ?;
SIB_MENTOR_REVIEWS_READ=SELECT mentorId,userName,firstName,lastName, Rating,smrs.notes, lastUpdateDate, vid.subTopic from Sib_Users su , Sib_Videos vid, Sib_Mentor_Reviewd_Student smrs  LEFT OUTER JOIN  Sib_User_Watch_Video uwv ON uwv.uid= smrs.studentId where su.userId=smrs.mentorId and uwv.vid = vid.vid and smrs.studentId=? and su.userType='M' order by firstName limit ?,?;
SIB_MENTOR_REVIEWS_READ_COUNT=SELECT count(*)  as COUNT from Sib_Users su , Sib_Mentor_Reviewd_Student smrs where su.userId=smrs.mentorId and smrs.studentId=? and su.userType='M';
GET_NOTE_USER=SELECT studentId, mentorId, note, creationDate FROM Sib_User_Notes where studentId = ?;
INSERT_USER_NOTE=insert into Sib_User_Notes(studentId, mentorId, note) values(?, ?, ?)
SIB_INSERT_TAG=insert into Sib_Video_Tag(vid,tag) values(?,?);
SIB_REMOVE_VIDEO=UPDATE Sib_Videos SET videoEnable ='N' WHERE vid=?;
SIB_GET_VIDEO=SELECT v.vid, title, author, authorId, subject, v.subjectId, topic, v.topicId, subtopic, description, image , url, runningTime, numViews, numRatings, numComments, (SELECT avg(rating) FROM Sib_Video_Rating  WHERE vid = ?) AS rating from Sib_Videos v WHERE v.vid = ? AND videoEnable = 'Y';
GET_RATING_VIDEO=SELECT avg(rating) rating FROM Sib_Video_Rating WHERE vid = ?;
GET_RATING_VIDEO_ADMISSION=SELECT avg(rating) rating FROM Sib_Video_Admission_Rating WHERE vid = ?;
SIB_GET_TAGS=SELECT vid,tag FROM Sib_Video_Tag WHERE vid=?;
SIB_GET_COMMENTS=select vid, vc.cid, status, com.cid, SU.userName author, authorId, content, numLike, numReplies, image, CAST((SELECT CONCAT(FLOOR(HOUR(TIMEDIFF(timeStamp, NOW())) / 24), ' day(s) ', MOD(HOUR(TIMEDIFF(timestamp, NOW())), 24), ' hour(s) ',MINUTE(TIMEDIFF(timestamp, NOW())), ' minutes')) AS CHAR(10000) CHARACTER SET utf8) timestamp, (SELECT count(*) FROM Sib_Comment_Like scl, Sib_Comments sc WHERE scl.cid = sc.cid AND scl.likecomment = 'Y' AND scl.cid = vc.cid) countLike, active, parent_cid, child_cid from Sib_Video_Comments vc, Sib_Comments com JOIN Sib_Users SU on SU.userId = com.authorId LEFT OUTER JOIN Sib_Nested_Comments nes ON com.cid = nes.child_cid where (vc.cid = com.cid OR vc.cid = nes.parent_cid) AND vc.vid = ? GROUP BY com.cid order by vc.cid DESC;
SIB_GET_COMMENTS_PN=select vid, vc.cid, status, SU.userName author, SU.userId authorId, SU.userName,SU.firstName, SU.lastName, content, numLike, numReplies, SU.imageUrl image, SU.idFacebook, SU.idGoogle, SU.userType, UNIX_TIMESTAMP(com.timestamp) timestamp, (SELECT count(*) FROM Sib_Comment_Like scl, Sib_Comments sc WHERE scl.cid = sc.cid AND scl.likecomment = 'Y' AND scl.cid = vc.cid) countLike, active, nes.parent_cid, nes.child_cid from Sib_Video_Comments vc, Sib_Comments com JOIN Sib_Users SU on SU.userId = com.authorId LEFT OUTER JOIN Sib_Nested_Comments nes ON com.cid = nes.child_cid where (vc.cid = com.cid OR vc.cid = nes.parent_cid) AND vc.vid = ? GROUP BY com.cid order by vc.cid DESC limit ?, ?;
SIB_GET_COMMENTS_PN_COUNT=select count(*) as COUNT from Sib_Video_Comments vc, Sib_Comments com LEFT OUTER JOIN Sib_Nested_Comments nes ON com.cid = nes.child_cid where (vc.cid = com.cid OR vc.cid = nes.parent_cid) AND vc.vid = ? ;
SIB_GET_VIDEO_ADMISSION_COMMENTS_PN=SELECT vId, SVAC.cid, status, SU.userName author, SU.imageUrl imageUser, SU.userId authorId, SU.firstName, SU.lastName, SU.idFacebook, SU.idGoogle, content, numLike, numReplies, image, UNIX_TIMESTAMP(com.timestamp) creationDate, (SELECT count(*) FROM Sib_Comment_Like scl, Sib_Comments sc WHERE scl.cid = sc.cid AND scl.likecomment = 'Y' AND scl.cid = SVAC.cid) countLike, active from Sib_Video_Admission_Comments SVAC, Sib_Comments com JOIN Sib_Users SU on SU.userId = com.authorId where SVAC.cid = com.cid AND SVAC.vId = ? GROUP BY com.cid order by SVAC.cid DESC limit ?, ?;
SIB_GET_VIDEO_ADMISSION_COMMENTS_PN_COUNT=SELECT count(*) as COUNT from Sib_Video_Admission_Comments SVAC, Sib_Comments COM WHERE SVAC.cid = COM.cid AND SVAC.vId = ?;
SIB_GET_ARTICLE_COMMENTS_PN=SELECT arId, SAC.cid, status, SU.userName author, SU.userId authorId, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, content, numLike, numReplies, image, UNIX_TIMESTAMP(com.timestamp) creationDate, (SELECT count(*) FROM Sib_Comment_Like scl, Sib_Comments sc WHERE scl.cid = sc.cid AND scl.likecomment = 'Y' AND scl.cid = SAC.cid) countLike, active from Sib_Article_Comments SAC, Sib_Comments com JOIN Sib_Users SU on SU.userId = com.authorId where SAC.cid = com.cid AND SAC.arId = ? order by SAC.cid DESC limit ?, ?;
SIB_GET_ARTICLE_COMMENTS_PN_COUNT=SELECT count(*) as COUNT from Sib_Article_Comments SAC, Sib_Comments COM WHERE SAC.cid = COM.cid AND SAC.arId = ?;
SIB_GET_ESSAY_COMMENTS_PN=SELECT eid, SEC.cid, status, SU.userName author, SU.userId authorId, SU.firstName, SU.lastName, content, numLike, numReplies, image, UNIX_TIMESTAMP(com.timestamp) creationDate, (SELECT count(*) FROM Sib_Comment_Like scl, Sib_Comments sc WHERE scl.cid = sc.cid AND scl.likecomment = 'Y' AND scl.cid = SEC.cid) countLike, active from Sib_Essay_Comments SEC, Sib_Comments com JOIN Sib_Users SU on SU.userId = com.authorId where SEC.cid = com.cid AND SEC.eid = ? GROUP BY com.cid order by SEC.cid DESC limit ?, ?;
SIB_GET_ESSAY_COMMENTS_PN_COUNT=SELECT count(*) as COUNT from Sib_Essay_Comments SEC, Sib_Comments COM WHERE SEC.cid = COM.cid AND SEC.eid = ?;
SIB_EDIT_VIDEO=UPDATE Sib_Videos set title = ?,description=? where vid= ?
SIB_DELETE_TAGS= DELETE from Sib_Video_Tag where vid=?;
SIB_GET_USER_RATE_VIDEO_ADMISSION=SELECT * FROM Sib_Video_Admission_Rating WHERE uid = ? AND vid = ?;
SIB_RATE_VIDEO=INSERT INTO Sib_Video_Rating(vid, uid, rating) VALUE(?, ?, ?);
SIB_RATE_VIDEO_ADMISSION=INSERT INTO Sib_Video_Admission_Rating(vid, uid, rating) VALUE(?, ?, ?);
SIB_RATE_UPDATE_VIDEO=UPDATE Sib_Video_Rating set rating = ? where vid = ? and uid = ?;
SIB_RATE_UPDATE_VIDEO_ADMISSION=UPDATE Sib_Video_Admission_Rating set rating = ? where vid = ? and uid = ?;
SIB_GET_VIDEO_WITH_TOPIC=SELECT sv.vid, title, author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments, u.points from Sib_Videos sv, Sib_Users u WHERE  u.userid = sv.authorId  AND sv.videoEnable='Y' AND sv.topicId =? ORDER BY vid DESC;
GET_VIDEO_ORDER_SYLLABUS_PN=SELECT sv.vid, title, author, authorId, Subject, topic, subtopic, description, image, url, runningTime, numViews, numRatings, numComments, points from Sib_Videos sv, Sib_Users us WHERE  sv.videoEnable = 'Y' AND sv.authorId = us.userid AND sv.topicId = ? AND sv.subjectId = ? ORDER BY timeStamp DESC limit ?,?;
GET_VIDEO_ORDER_RATING_PN=SELECT sv.vid, title, author, authorId, Subject, topic, subtopic, description, image, url, runningTime, numViews, numRatings, numComments, points from Sib_Videos sv, Sib_Users us WHERE  sv.videoEnable = 'Y' AND sv.authorId = us.userid AND sv.topicId = ? AND sv.subjectId = ? ORDER BY numRatings DESC limit ?,?;
GET_VIDEO_ORDER_VIEW_PN=SELECT sv.vid, title, author, authorId, Subject, topic, subtopic, description, image, url, runningTime, numViews, numRatings, numComments, points from Sib_Videos sv, Sib_Users us WHERE  sv.videoEnable = 'Y' AND sv.authorId = us.userid AND sv.topicId = ? AND sv.subjectId = ? ORDER BY numViews DESC limit ?,?;
GET_VIDEO_PN=SELECT sv.vid, us.userName, us.firstName, us.lastName, title, author, authorId, Subject, topic, subtopic, sv.description, image, url, runningTime, numViews, numRatings, numComments, points, (SELECT avg(rating) FROM Sib_Video_Rating WHERE vid = sv.vid) as rating FROM Sib_Videos sv, Sib_Users us WHERE sv.videoEnable = 'Y' AND sv.authorId = us.userid AND sv.topicId = ? AND sv.subjectId = ? ORDER BY chapter, title limit ?, ?;
SIB_GET_VIDEO_WITH_TOPIC_PN_COUNT=SELECT count(*) as COUNT from Sib_Videos WHERE videoEnable='Y' AND subjectId = ? AND topicId = ?;
SIB_GET_VIDEO_WITH_SUB_TOPIC=SELECT sv.vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments from Sib_Videos sv WHERE sv.videoEnable='Y' and sv.subjectId =?  AND  sv.subtopic=? AND sv.topic =?;
SIB_GET_VIDEO_WITH_SUB_TOPIC_PN=SELECT sv.vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments from Sib_Videos sv WHERE sv.videoEnable='Y' and sv.subject =?  AND  sv.subtopic=? AND sv.topic =? limit ?,?;
SIB_GET_VIDEO_WITH_SUB_TOPIC_PN_COUNT=SELECT count(*) as COUNT from Sib_Videos sv WHERE sv.videoEnable='Y' and sv.subject =?  AND  sv.subtopic=? AND sv.topic =?;
SIB_SEARCH_VIDEOS=SELECT vid, title, author, authorId, Subject, subjectId, topic, topicId, subtopic, description, image, url, runningTime, numViews, numRatings, numComments FROM Sib_Videos where title like ? or description like ? order by title,description;
SIB_GET_VIDEOS=SELECT vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos limit 0,10;
GET_VIDEOS_LIST = SELECT vid, title,author, authorId,v.Subject,topic,subtopic,v.description,v.image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos v, Sib_Subject s where v.subject=s.subject order by vid
GET_VIDEOS_LIST_SUBID=SELECT vid, title,author, authorId,v.Subject,topic,subtopic,v.description,v.image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos v, Sib_Subject s where v.subjectId=s.subjectId and s.subjectId =? order by vid
GET_VIDEOS_LIST_PN = SELECT vid, title,author, authorId,v.Subject,topic,subtopic,v.description,v.image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos v, Sib_Subject s where v.subject=s.subject order by vid  limit ?,?;
GET_VIDEOS_LIST_SUBID_PN = SELECT vid, title,author, authorId,v.Subject,topic,subtopic,v.description,v.image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos v, Sib_Subject s where v.subject=s.subject and s.subjectId =? order by vid  limit ?,?;
GET_VIDEOS_LIST_PN_COUNT = SELECT count(*) as COUNT FROM Sib_Videos v, Sib_Subject s where v.subject=s.subject ;
GET_VIDEOS_LIST_SUBID_PN_COUNT = SELECT count(*) as COUNT FROM Sib_Videos v, Sib_Subject s where v.subject=s.subject and s.subjectId =?;
GET_HISTORY_VIDEOS_LIST = SELECT sv.*, su.userName,su.firstName, su.lastName, UNIX_TIMESTAMP(sv.timeStamp) timeStamp FROM Sib_Video_History svh, Sib_Videos sv, Sib_Users su WHERE svh.vid = sv.vid and sv.authorID = su.userid and svh.uid = ? ORDER BY svh.viewtime DESC;
CLEAR_HISTORY_VIDEOS_LIST = DELETE from Sib_Video_History WHERE uid = ?;
DELETE_HISTORY_VIDEO_BY_VID = DELETE from Sib_Video_History WHERE uid = ? and vid = ?;
SIB_GET_VIDEOS_PN=SELECT vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos limit ?,?;
SIB_GET_LIST_CATEGORY_SUBSCRIPTION = select subjectId, subject from Sib_Category where isForum = 0 and level = 0;
SIB_GET_ALL_VIDEO_SUBSCRIPTION = SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime, UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName, u.lastName, u.userName, 1 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN ( SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = ? AND s.Subcribe = 'Y' ) AND v.subjectId IN ( SELECT subjectId FROM Sib_Category WHERE isForum = 0) AND v.TIMESTAMP >= ? UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName, u.lastName, u.userName, 2 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN ( SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = ? AND s.Subcribe = 'Y' ) AND v.subjectId IN ( SELECT subjectId FROM Sib_Category WHERE isForum = 0) AND v. TIMESTAMP >= ? AND v. TIMESTAMP < ? UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName, u.lastName, u.userName, 3 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN ( SELECT DISTINCT s.MentorId FROM Sib_Student_Subcribe s WHERE s.newViewVideo = v.vid AND s.MentorId IN ( SELECT s1.MentorId FROM Sib_Student_Subcribe s1 WHERE s1.StudentId = ? AND s1.Subcribe = 'Y' ) ) AND v.subjectId IN ( SELECT subjectId FROM Sib_Category WHERE isForum = 0) AND v.TIMESTAMP < ?;
#SIB_GET_ALL_VIDEO_SUBSCRIPTION_BY_CATEGORY = SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName, u.lastName, u.userName, 1 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = ? AND s.Subcribe = 'Y') AND v.timeStamp >= ? AND v.subjectId = ? UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName,u.lastName,u.userName, 2 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = ? AND s.Subcribe = 'Y') AND v.timeStamp >= ? AND v.timeStamp < ? AND v.subjectId = ? UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews,v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName,u.lastName,u.userName, 3 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT DISTINCT s.MentorId FROM Sib_Student_Subcribe s WHERE s.newViewVideo = v.vid AND s.MentorId IN (SELECT s1.MentorId FROM Sib_Student_Subcribe s1 WHERE s1.StudentId = ? AND s1.Subcribe = 'Y')) AND v.subjectId = ?;
SIB_GET_ALL_VIDEO_SUBSCRIPTION_BY_CATEGORY = SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime, UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName, u.lastName, u.userName, 1 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = :userID AND s.Subcribe = 'Y') AND v.timeStamp >= :currentDate AND v.subjectId in (:subjectID) UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews, v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName,u.lastName,u.userName, 2 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT s.MentorId FROM Sib_Student_Subcribe s WHERE s.StudentId = :userID AND s.Subcribe = 'Y') AND v.timeStamp >= :firstDayOfCurrentWeek AND v.timeStamp < :currentDate AND v.subjectId in (:subjectID) UNION SELECT v.vid, v.authorID, v.title, v.image, v.averageRating, v.numRatings, v.numComments, v.numViews,v.runningTime,UNIX_TIMESTAMP(v.`timeStamp`) as timeStamp, v.subjectId, v.url, u.firstName,u.lastName,u.userName, 3 AS flag FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND v.authorID IN (SELECT DISTINCT s.MentorId FROM Sib_Student_Subcribe s WHERE s.newViewVideo = v.vid AND s.MentorId IN (SELECT s1.MentorId FROM Sib_Student_Subcribe s1 WHERE s1.StudentId = :userID AND s1.Subcribe = 'Y')) AND v.subjectId in (:subjectID) AND v.TIMESTAMP < :firstDayOfCurrentWeek;
SIB_SEARCH_VIDEOS_PN=SELECT vid, title, author, authorId, Subject, subjectId, topic, topicId, subtopic, description, image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Videos  WHERE title like ? limit ?,?;
SIB_SEARCH_VIDEOS_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Videos  WHERE title like ?;
SIB_SEARCH_VIDEO_TAG=SELECT sv.vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Video_Tag svt , Sib_Videos sv WHERE sv.vid=svt.vid and MATCH(tag) AGAINST(? IN BOOLEAN MODE) ORDER BY MATCH(tag) AGAINST(? IN BOOLEAN MODE);
SIB_SEARCH_VIDEO_TAG_PN=SELECT sv.vid, title,author, authorId,Subject,topic,subtopic,description,image ,url, runningTime,numViews,numRatings,numComments FROM Sib_Video_Tag svt , Sib_Videos sv WHERE sv.vid=svt.vid and MATCH(tag) AGAINST(? IN BOOLEAN MODE) ORDER BY MATCH(tag) AGAINST(? IN BOOLEAN MODE) limit ?,?;
SIB_SEARCH_VIDEO_TAG_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Video_Tag svt , Sib_Videos sv WHERE sv.vid=svt.vid and MATCH(tag) AGAINST(? IN BOOLEAN MODE) ORDER BY MATCH(tag) AGAINST(? IN BOOLEAN MODE);
SIB_GET_VIDEO_WITH_SUBJECT=SELECT topicId,topic,description,image from Sib_Topic where active ='Y' AND subjectId  =?;
SIB_GET_VIDEO_WITH_SUBJECT_PN=SELECT topicId,topic,description from Sib_Topic where active ='Y' AND subjectId  =? limit ?,?;
SIB_GET_VIDEO_WITH_SUBJECT_PN_COUNT=SELECT count(*) as COUNT from Sib_Topic where active ='Y' AND subjectId  =?;
SIB_GET_VIDEO_WITH_TOPICS=SELECT sv.vid, title, author, authorId, subject, subjectId, topic, subtopic, description, image, url, runningTime, numViews, numRatings, numComments, points from Sib_Videos sv, Sib_Users u WHERE u.userid = sv.authorId AND sv.videoEnable='Y' AND sv.subjectId = ? AND sv.topicId = ? ORDER BY sv.vid DESC LIMIT ?, ?;
SIB_GET_VIDEO_WITH_TOPICS_COUNT=SELECT count(*) as COUNT from Sib_Videos sv WHERE sv.videoEnable='Y' and sv.subject =?  AND   sv.topic =?;
TOPICS_READ=SELECT ss.subjectId, ss.subject, ss.description as subjectDescription, st.topicId,st.topic, st.description as topicDescription  FROM Sib_Topic st, Sib_Subject ss WHERE ss.subjectId = st.subjectId  AND ss.active = 'Y' AND st.active ='Y' and ss.subjectId =? order by st.topic
SIB_ADD_COMMENT=INSERT INTO Sib_Comments (author, authorId, content, timestamp) value (?, ?, ?, now());
SIB_LAST_INSERTED_COMMENT=SELECT cid, authorId from Sib_Comments WHERE authorId=? and content=? order by timestamp desc limit 1;
SIB_INSERT_VIDEO_COMMENT=INSERT INTO Sib_Video_Comments (cid, vid) VALUES (?, ? );
SIB_INSERT_VIDEO_ADMISSION_COMMENT=INSERT INTO Sib_Video_Admission_Comments (vId, cid) VALUES (?, ? );
SIB_INSERT_ESSAY_COMMENT=INSERT INTO Sib_Essay_Comments (eid, cid) VALUES (?, ? );
SIB_INSERT_ARTICLE_COMMENT=INSERT INTO Sib_Article_Comments (arId, cid) VALUES (?, ? );
SIB_INSERT_ANSWER_COMMENT=INSERT INTO Sib_Forum_Answer_Comment (aid,cid) VALUES (?,? );
SEARCH_POST_ANSWERS=SELECT aid, pid, usr.userid, usr.userName, title, content, numViews, numReplies, image, CAST((SELECT CONCAT(FLOOR(HOUR(TIMEDIFF(timeStamp, NOW())) / 24), ' day(s) ', MOD(HOUR(TIMEDIFF(timestamp, NOW())), 24), ' hour(s) ',MINUTE(TIMEDIFF(timestamp, NOW())), ' minutes')) AS CHAR(10000) CHARACTER SET utf8) timeStamp, (SELECT COUNT(*) FROM Sib_Answer_like WHERE aid = ans.aid AND likeAnswer = 'Y') as countLike FROM Sib_Forum_Answer ans, Sib_Users usr where ans.authorID = usr.userid and  pid=? and ans.enableFlag = 'Y' order by aid desc;
SEARCH_ANSWER_COMMENTS=SELECT * FROM Sib_Comments c,Sib_Forum_Answer_Comment ac where c.cid=ac.cid and ac.aid=?;
SIB_UPDATE_VIDEO_COMMENT=UPDATE Sib_Videos set numComments = (IFNULL(numComments,0) + 1) WHERE vid = ?;
SIB_UPDATE_ARTICLE_COMMENT=UPDATE Sib_Article SET numComments = (IFNULL(numComments,0) + 1) WHERE arId = ?;
UPDATE_NUMCOMMENT_VIDEO_ADMISSION = UPDATE Sib_Video_Admission SET numComments = (IFNULL(numComments,0) + 1) WHERE vid = ?;
SIB_GET_NESTED_COMMENTS=SELECT sc.cid,sc.author,sc.authorId,sc.content, sc.numLike,sc.numReplies,sc.image,sc.timeStamp FROM Sib_Comments sc,  Sib_Nested_Comments snc WHERE sc.cid = snc.child_cid and snc.parent_cid=?;
SIB_INSERT_NESTED_COMMENT=INSERT INTO Sib_Comments (author,authorId,content,image,timestamp) value (?,?,?,?,now());
SIB_GET_NESTED_CID=SELECT cid from Sib_Comments WHERE authorId=? and content=?;
SIB_INSERT_NESTED_TABLE=INSERT INTO Sib_Nested_Comments (parent_cid,child_cid) VALUES (?,? );
SIB_EDIT_COMMENT=UPDATE Sib_Comments SET content =? WHERE cid = ?;
SIB_REMOVE_COMMENT= delete Sib_Comments WHERE cid=?;
LIKE_COMMENT_UPDATE=UPDATE `Sib_Comment_Like` SET `likecomment` = 'Y' WHERE uid = ? AND cid = ?;
UNLIKE_COMMENT_UPDATE=UPDATE `Sib_Comment_Like` SET `likecomment` = 'N' WHERE uid = ? AND cid = ?;
LIKE_COMMENT_READ=SELECT * FROM Sib_Comment_Like WHERE uid = ? and cid = ?;
LIKE_COMMENT_INSERT=INSERT INTO Sib_Comment_Like (`uid`, `cid`, `likecomment`) VALUES (?, ?, 'Y');
LIKE_COMEMENT_READ=SELECT * FROM Sib_Comment_Like WHERE uid = ? AND cid = ?
LIKE_COMEMENT_READ_CHECK=SELECT * FROM Sib_Comment_Like WHERE uid = ? AND cid = ? AND likecomment = 'Y';
LIKE_NUM_COMMENT_INSERT=INSERT INTO `Sib_Comments` (`cid`,`numLike`) VALUES (?,1);
LIKE_UPDATE=UPDATE `Sib_Comments` SET `numLike` = (IFNULL(numLike,0) +1) WHERE  cid=?;
UNLIKE_UPDATE=UPDATE `Sib_Comments` SET `numLike` = (IFNULL(numLike) -1) WHERE  cid=?;
VIDEO_FAVOURITE_INSERT=INSERT INTO Sib_Video_Favourite (`uid`,`vid`,`favouritetime`) VALUES (?,?,now());
VIDEO_FAVOURITE_READ_LIMIT=SELECT sv.*,su.userName,su.firstName, su.lastName FROM Sib_Videos sv, Sib_Video_Favourite svf, Sib_Users su WHERE sv.vid = svf.vid and sv.authorID = su.userid and sv.videoEnable = 'Y' AND uid=? AND svf.favouritetime < ? ORDER BY svf.favouritetime DESC Limit ?
VIDEO_FAVOURITE_READ_ALL_BY_USER=SELECT sv.*,su.userName,su.firstName, su.lastName, UNIX_TIMESTAMP(sv.timeStamp) timeStamp FROM Sib_Videos sv, Sib_Video_Favourite svf, Sib_Users su WHERE sv.vid = svf.vid and sv.authorID = su.userid and sv.videoEnable = 'Y'AND svf.uid = ? ORDER BY svf.favouritetime DESC;
VIDEO_FAVOURITE_UPDATE=UPDATE `Sib_Videos` SET `numFavourite` = (IFNULL(numFavourite,0) +1) WHERE  vid=?;
VIDEO_UNFAVOURITE_UPDATE=UPDATE `Sib_Videos` SET `numFavourite` = (IFNULL(numFavourite,0) -1) WHERE  vid=?;
VIDEO_UNFAVOURITE_UPDATE_ALL_BY_USER = UPDATE Sib_Videos sv inner JOIN Sib_Video_Favourite svf ON sv.vid=svf.vid SET sv.numFavourite = (IFNULL(sv.numFavourite,0) - 1) WHERE svf.uid = ?;
VIDEO_FAVOURITE_DELETE=DELETE FROM Sib_Video_Favourite WHERE uid=?  AND vid=?;
VIDEO_COMMENT_UPDATE = UPDATE `Sib_Videos` SET `numComments` = IFNULL(numComments,0) + 1 WHERE  vid=?;
VIDEO_DEL_COMMENT_UPDATE = UPDATE `Sib_Videos` SET `numComments` = IFNULL(numComments,0) - 1 WHERE  vid=?;
VIDEO_FAVOURITE_DELETE_ALL=DELETE FROM Sib_Video_Favourite WHERE uid=?;
VIDEO_FAVOURITE_COUNT_BY_USER=SELECT count(*) FROM Sib_Video_Favourite svf WHERE svf.uid = ?
WATCH_VIDEO_READ=SELECT * FROM Sib_User_Watch_Video WHERE uid=? AND vid=?;
WATCH_VIDEO_INSERT=INSERT INTO Sib_User_Watch_Video (`uid`,`vid`) VALUES (?,?);
WATCH_VIDEO_UPDATE=UPDATE `Sib_Videos` SET `numViews` = (IFNULL(numViews,0)+1) WHERE  vid=?;
CREATE_POST=INSERT INTO `Sib_Forum_Post` (`authorID`, `subjectId`, `content`, `timeStamp`, `updateTime`) VALUES (?, ?, ?, now(), now());
SIB_NUM_REPLIES_UPDATE=UPDATE `Sib_Forum_Answer` SET `numReplies` = (IFNULL(numReplies,0)+1) WHERE  pid=?;
ANSWER_EDIT=UPDATE Sib_Forum_Answer set content=?, imagePath = ?,`timeStamp` = current_timestamp where aid= ?
REMOVE_ANSWER=DELETE from Sib_Forum_Answer where aid = ?;
REMOVE_ANSWER_LIKE=DELETE FROM Sib_Answer_like WHERE aid = ?;
GET_POST_INFO=SELECT `sfp`.`pid`, `su`.`userid`, `su`.`userName`,`su`.`userType`, `sfp`.`title`, `ss`.`subject`, `ss`.`subjectId`, `st`.`topic`, `st`.`topicId`, `sfp`.`content`,`sfp`.`numViews`,`sfp`.`numReplies`,`sfp`.`image`,(SELECT CONCAT(FLOOR(HOUR(TIMEDIFF(sfp.timeStamp, NOW())) / 24), ?, MOD(HOUR(TIMEDIFF(sfp.timeStamp, NOW())), 24), ?, MINUTE(TIMEDIFF(sfp.timeStamp, NOW())), ' minutes')) timeStamp,`sfp`.`updateTime` FROM `Sib_Forum_Post` sfp, Sib_Users su, Sib_Subject ss, Sib_Topic st where su.userId = sfp.authorId and ss.subjectId = sfp.subjectId and sfp.topicId = st.topicId and (pid = COALESCE(?,PID)) ORDER BY timeStamp Desc;
GET_POST_INFO_PN=SELECT `sfp`.`pid`,`su`.`userName`,`sfp`.`title`,`ss`.`subject`,`st`.`topic`, `sfp`.`content`,`sfp`.`numViews`,`sfp`.`numReplies`,`sfp`.`image`,`sfp`.`timeStamp`,`sfp`.`updateTime` FROM `Sib_Forum_Post` sfp, Sib_Users su, Sib_Subject ss , Sib_Topic st where su.userId=sfp.authorId and ss.subjectId=sfp.subjectId and sfp.topicId=st.topicId  and (pid= COALESCE(?,PID)) ORDER BY timeStamp Desc limit ?,?;
GET_POST_INFO_PN_COUNT=SELECT count(*) as COUNT  FROM `Sib_Forum_Post` sfp, Sib_Users su, Sib_Subject ss , Sib_Topic st where su.userId=sfp.authorId and ss.subjectId=sfp.subjectId and sfp.topicId=st.topicId  and (pid= COALESCE(?,PID)) ORDER BY timeStamp Desc;
GET_POST_LIST=SELECT * FROM Sib_Forum_Post  order by pid
GET_POST_SUBID_LIST=SELECT * FROM Sib_Forum_Post where subjectId = ? order by pid
GET_POST_LIST_PN=SELECT * FROM Sib_Forum_Post where visible = 1 order by pid DESC limit ?,?;
GET_POST_LIST_SUBID_PN=SELECT SU.userName, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFP.pid, SFP.authorID, SFP.title, SFP.subjectId, SFP.topicId, SFP.content, SFP.numViews, SFP.numReplies, UNIX_TIMESTAMP(SFP.timeStamp) timeStamp, UNIX_TIMESTAMP(SFP.updateTime) updateTime, SFP.enableFlag, (SELECT COUNT(*) FROM Sib_Post_Like WHERE pid = SFP.pid AND likePost = 1) AS countLike FROM Sib_Forum_Post AS SFP JOIN Sib_Users AS SU ON authorID = userid LEFT JOIN Sib_Post_Like AS SPK ON SPK.pid = SFP.pid WHERE subjectId = ? AND topicId = ? GROUP BY SFP.pid ORDER BY pid DESC limit ?, ?;
GET_POST_LIST_SUBJECTID_PN=SELECT SU.userName, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFP.pid, SFP.authorID, SFP.title, SFP.subjectId, SFP.topicId, SFP.content, SFP.numViews, SFP.numReplies, UNIX_TIMESTAMP(SFP.timeStamp) timeStamp, UNIX_TIMESTAMP(SFP.updateTime) updateTime, SFP.enableFlag, (SELECT COUNT(*) FROM Sib_Post_Like spl, Sib_Forum_Post sfp WHERE spl.pid = sfp.pid AND likePost = 1 AND spl.pid = SFP.pid) as countLike FROM Sib_Forum_Post as SFP join Sib_Users as SU on authorID = userid left join Sib_Post_Like as SPK on SPK.pid = SFP.pid where visible = 1 AND subjectId = ? group by SFP.pid order by pid DESC limit ?, ?;
GET_POST_LIST_SUBJECTID_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Post where visible = 1 AND subjectId = ?;
GET_POST_LIST_SUBID_RELATED_PN=SELECT SU.userName, SFP.pid, SFP.authorID, SFP.title, SFP.subjectId, SFP.topicId, SFP.content, SFP.numViews, SFP.numReplies, SFP.timeStamp, SFP.updateTime, SFP.enableFlag, (SELECT COUNT(*) FROM Sib_Post_Like WHERE pid = SFP.pid AND likePost = 1) AS countLike FROM Sib_Forum_Post AS SFP JOIN Sib_Users AS SU ON authorID = userid LEFT JOIN Sib_Post_Like AS SPK ON SPK.pid = SFP.pid WHERE SFP.visible = 1 AND subjectId = ? AND topicId = ? AND SFP.pid != ? GROUP BY SFP.pid ORDER BY pid DESC LIMIT ?, ?;
GET_POST_LIST_RELATED_PN=SELECT SU.userName, SFP.pid, SFP.authorID, SFP.title, SFP.subjectId, SFP.topicId, SFP.content, SFP.numViews, SFP.numReplies, SFP.timeStamp, SFP.updateTime, SFP.enableFlag, (SELECT COUNT(*) FROM Sib_Post_Like WHERE pid = SFP.pid AND likePost = 1) AS countLike FROM Sib_Forum_Post AS SFP JOIN Sib_Users AS SU ON authorID = userid LEFT JOIN Sib_Post_Like AS SPK ON SPK.pid = SFP.pid WHERE SFP.visible = 1 AND subjectId = ? AND SFP.pid != ? GROUP BY SFP.pid ORDER BY pid DESC LIMIT ?, ?;
GET_POST_LIST_SUBID_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Post WHERE visible = 1 AND subjectId = ? AND topicId = ?;
GET_POST_LIST_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Post WHERE visible = 1 AND subjectId = ?;
GET_POST_LIST_SUBID_MOBILE=SELECT * FROM Sib_Forum_Post where subjectId = ? order by pid desc limit ?,?;
GET_POST_LIST_MOBILE=SELECT * FROM Sib_Forum_Post order by pid  limit ?,?;
GET_POST_LIST_MOBILE_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Post where  subjectId = ?;
REMOVE_POST=DELETE from Sib_Forum_Post where pid=?;
REMOVE_ANSWER_BY_POST=DELETE FROM Sib_Forum_Answer WHERE pid = ?;
REMOVE_POST_LIKE=DELETE FROM Sib_Post_Like WHERE pid = ?;
GET_PID=SELECT max(pid) pid from Sib_Forum_Post where subjectId = ?;
POST_INSERT_TAG=insert into Sib_forum_tags(pid,tag) values(?,?);
POST_GET_TAGS=SELECT pid,tag FROM Sib_forum_tags WHERE pid=?;
POST_DELETE_TAGS= DELETE from Sib_forum_tags where pid=?;
POST_INSERT_FORUM_COMMENT=INSERT INTO Sib_forum_post_comment (pid,cid) VALUES (?,? );
SEARCH_POSTS_IN_SUB_CATEGORY=SELECT `Sib_Forum_Post`.`pid`,`Sib_Forum_Post`.`author`,`Sib_Forum_Post`.`authorID`,`Sib_Forum_Post`.`title`,`Sib_Forum_Post`.`category`,`Sib_Forum_Post`.`subcategory`,  `Sib_Forum_Post`.`content`,`Sib_Forum_Post`.`numViews`,`Sib_Forum_Post`.`numReplies`,`Sib_Forum_Post`.`image`,`Sib_Forum_Post`.`timeStamp`,`Sib_Forum_Post`.`updateTime` FROM `Sib_Forum_Post` where subcategory=?;
POST_READ_FORUM_COMMENT=SELECT sc.cid,sc.author,sc.authorId,sc.content,sc.numLike,sc.numReplies,sc.image,sc.timestamp FROM Sib_forum_post_comment  svc ,Sib_Comments sc  WHERE  svc.cid=sc.cid AND  svc.pid=?;
SEARCH_POST=SELECT pid,authorId,title,content FROM Sib_Forum_Post where visible = 1 AND (content like? or title like ?) ORDER BY title,content Desc;
SEARCH_POSTS_IN_SUBCATEGORY=SELECT  pid,author,authorID,title,category,subcategory,content,numViews,numReplies,image,timeStamp,updateTime FROM Sib_Forum_Post WHERE MATCH(subcategory) AGAINST(? IN BOOLEAN MODE) ORDER BY MATCH(subcategory) AGAINST(? IN BOOLEAN MODE) LIMIT 0,10 ;
SUBJECTS_LIST_DATA_READ=SELECT subjectId subject_id,subject subject_name FROM Sib_Subject
SUBJECTS_READ=SELECT subjectId subject_id, subject subject_name, description, creationDate creation_date, active, image, isForum FROM Sib_Subject;
CATAGERY_READ=SELECT s.subject_id, subject_name, s.description as subject_description, s.image as subject_icon, subject_category_id, subject_category_name, sc.description as subcategory_description, sc.image as category_icon FROM Sib_Subject_Categories sc, Sib_Subjects s WHERE s.subject_id = sc.subject_id and s.subject_id =? AND s.active = 'Y' AND sc.active ='Y' order by subject_category_name;
GET_VEDIO_INFO=SELECT video_id,video_link,video_name,description,avg(rating) rating,video_id subject_sub_category_id,subject_category_id,subject_id FROM saatya_video_stream svs WHERE svs.video_id = ? AND svs.subject_category_id = ? AND svs.subject_id = ?;
SUBCATAGERY_READ_PN=SELECT ssc.subject_category_id,ssc.subject_id,sssc.subject_sub_category_id,subject_sub_category_name,sssc.description,su.userName,sssc.image,sssc.popular_video, sssc.video_time, su.firstName as created_by_fname, su.lastName as  created_by_lname, su.userid as user_id, sssc.points, if(sssc.active='Y', ?,?) as active FROM Sib_Subject_Sub_Categories sssc, Sib_Users su, Sib_Subject_Categories ssc WHERE ssc.subject_category_id =sssc.subject_category_id  AND su.userid =sssc.video_prepared_by AND su.userType='M' AND sssc.video_prepared_by = su.userid AND  sssc.subject_category_id = ? AND  ssc.subject_id = ?  AND ssc.active='Y'  ORDER BY sssc.subject_sub_category_id desc, sssc.rating desc,popular_video desc,sssc.points desc limit ?,?;
SUBCATAGERY_READ_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Subject_Sub_Categories sssc, Sib_Users su, Sib_Subject_Categories ssc WHERE ssc.subject_category_id =sssc.subject_category_id  AND su.userid =sssc.video_prepared_by AND su.userType='M' AND  sssc.subject_category_id = ? AND  ssc.subject_id = ? AND ssc.active='Y'  ORDER BY popular_video desc;
GET_MAJORS=select id, name from Sib_Profile_Setup where category=?;
GET_EXTRA_ACTIVITIES=select id,name from Sib_Profile_Setup where category=?;
MENTOR_LIST=select userid, userName,firstName, lastName, school, points, enableFlag from Sib_Users where userType = 'M' order by ? limit ? offset ? ;
MENTOR_LIST_SEARCH=select imageUrl, userName,userid, firstName, lastName, school, points, enableFlag from Sib_Users where userType = 'M' and firstName Like ? limit ? offset ?;
MENTOR_LIST_FILTER=select imageUrl, userid, userName,firstName, lastName, school, points, enableFlag from Sib_Users where userType = 'M'  order by ?, userid desc limit ?, ?;
MENTOR_LIST_FILTER_ONLINE=select * from Sib_Users where userType = 'M' order by enableFlag DESC limit ?, ?;
TOP_MENTOR=select userid,userName,firstName,lastName,points, imageUrl FROM Sib_Users where userid =(SELECT mentor_id FROM Sib_Mentor_Subject_Mapping where points=(select max(points) from Sib_Mentor_Subject_Mapping where subject_id=? group by subject_id));
FETCH_FAQ=SELECT questionId, questionText, answerText, videoLink FROM Sib_Faq_Questions where faqCategory=? and active = 'Y'  ORDER BY ? LIMIT ? OFFSET ?;
FETCH_FAQ_TOP=SELECT questionId, questionText, answerText, active, creation_date, faqCategory FROM Sib_Faq_Questions WHERE active = 'Y' ORDER BY ? LIMIT ?;
SIGNUP_COMPLETE_USER=INSERT INTO Sib_Users(userName, password, firstName, lastName, userType, imageUrl, school, accomplishments, familyIncome, yourDream) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
GET_USERID=SELECT userid, userName FROM Sib_Users where userName = ?;
GET_LIST_MENTOR=SELECT userid, firstName,lastName, userName FROM Sib_Users WHERE userType = 'M' ORDER BY firstName;
SUBJECT_DATA_INSERT=INSERT INTO Sib_Subject(subject,description,creationDate,active,createdBy, lastUpdateDate, lastUpdatedBy) VALUES(?,?,STR_TO_DATE(?,'%m/%d/%Y'),?,?,curdate(),?);
SUBJECT_DATA_DELETE=DELETE FROM Sib_Subject WHERE subjectId = ?
VIDEO_SUBJECT_MAPPING_DATA_INSERT=INSERT INTO `Sib_Topic`(`topic`,`description`,`subjectId`,`active`)VALUES(?,?,?,?);
VIDEO_SUBJECT_MAPPING_DATA_READ=SELECT topicId subject_category_id, topic subject_category_name, description, active FROM Sib_Topic WHERE subjectId =? order by topic;
VIDEO_SUBJECT_MAPPING_DATA_READ_PN=SELECT topicId subject_category_id, topic subject_category_name, description, active FROM Sib_Topic WHERE subjectId =? order by topic limit ?,?;
VIDEO_SUBJECT_MAPPING_DATA_READ_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Topic WHERE subjectId =? order by topic;
VIDEO_SUBJECT_MAPPING_DATA_UPDATE=UPDATE Sib_Topic SET topic = ? , DESCRIPTION = ? , ACTIVE = ?  WHERE topicId = ?
VIDEO_SUBJECT_MAPPING_DATA_DELETE=DELETE FROM Sib_Topic WHERE topicId = ?
SUBJECT_SUB_CATEGORY_INSERT=INSERT INTO `Sib_Sub_Topic`(topicId,subTopic,description,active,creationDate) values(?,?,? ,'Y',SYSDATE());
VIDEO_SUBCATAGERY_READ=SELECT vid,title,subTopic,description,image, url,runningtime,videoEnable  FROM Sib_Videos where topicId =?  AND subjectId  =? ORDER BY subTopic desc
SUBJECT_SUB_CATEGORY_UPDATE=UPDATE Sib_Videos SET title=?, subTopic = ?,description = ? ,image = ?,url = ?,videoEnable = ? WHERE vid = ?;
SUBJECT_SUB_CATEGORY_DELETE=DELETE FROM Sib_Videos WHERE vid = ?
STUDENT_UPLOAD=INSERT INTO Sib_Essay_Upload (userId, status, originalDocument, docSubmittedDate, nameOfEssay, descriptionOfEssay, odFilesize, mimeType, urlFile, urlReview)  VALUES  (?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?, ?, ?, ?);
MENTOR_UPLOAD=UPDATE `Sib_Essay_Upload` SET `status` = ?,`reviewedDocument` = ?,`rdFilesize` = ?,`docReviewedDate` = CURRENT_TIMESTAMP WHERE userId =?;
STUDENT_DOWNLOAD=SELECT originalDocument,urlFile,odFilesize,mimeType FROM Sib_Essay_Upload where uploadEssayId = ? ;
MENTOR_DOWNLOAD=SELECT reviewedDocument,urlReview,rdFilesize,mimeType FROM Sib_Essay_Upload where uploadEssayId = ?;
GET_URL_FILE_ESSAY=SELECT urlFile FROM Sib_Essay_Upload WHERE uploadEssayId = ?;
GET_ESAY=SELECT nameOfEssay, descriptionOfEssay, docSubmittedDate, status, uploadEssayId FROM Sib_Essay_Upload WHERE userId=? ORDER BY uploadEssayId DESC limit ?, ?;
GET_ESAY_COUNT=SELECT count(*) as COUNT FROM Sib_Essay_Upload WHERE userId=?;
GET_ESSAY_BY_ID=SELECT e.numRate, e.averageRating, e.majorId,e.schoolId, e.mentorId,um.firstName mfirstName,um.lastName mlastName,um.imageUrl mavatar,um.userName muserName,e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, e.odFilesize, e.rdFilesize, e.urlReview,rdFilesize, UNIX_TIMESTAMP(e.docSubmittedDate) AS docSubmittedDate,UNIX_TIMESTAMP(e.docReviewedDate) AS docReviewedDate, e.status, e.uploadEssayId, e.urlFile, e.urlReview, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, u.userName, u.userId, u.imageUrl ,mc.content mentorComment, UNIX_TIMESTAMP(mc.`timestamp`) timestamp FROM Sib_Essay_Upload e inner join Sib_Users u on e.userid = u.userid LEFT JOIN Sib_Users um ON e.mentorId = um.userid LEFT JOIN (SELECT C.content,EC.eid, C.`timestamp` FROM Sib_Essay_Comments EC INNER JOIN Sib_Comments C ON EC.cid = C.cid) mc  ON mc.eid = e.uploadEssayId WHERE uploadEssayId = ?;
GET_ALL_ESAY=SELECT nameOfEssay, descriptionOfEssay, docSubmittedDate, status, uploadEssayId, userId FROM Sib_Essay_Upload ORDER BY uploadEssayId DESC limit ?, ?;
GET_ALL_ESAY_COUNT=SELECT count(*) as COUNT FROM Sib_Essay_Upload;
GET_ALL_ESSAY_STUDENT_COUNT=SELECT count(*) as COUNT FROM Sib_Essay_Upload WHERE userId = ?;
POST_DISCUSSION=INSERT INTO `Sib_Essay_Upload_discussion`(`userId`, `message`) VALUES (?, ?);
GET_DISCUSSION=SELECT sur.userName,usr.firstName, usr.lastName, usr.imageUrl, usr.userid, dis.message, UNIX_TIMESTAMP(dis.creationDate) creationDate FROM Sib_Essay_Upload_discussion dis, Sib_Users usr  WHERE dis.userId = usr.userid and dis.userId = ? ORDER BY discussionId DESC limit ?,?;
GET_DISCUSSION_COUNT=SELECT count(*) as COUNT FROM Sib_Essay_Upload_discussion dis, Sib_Users usr  WHERE dis.userId = usr.userid and dis.userId = ?;
REMOVE_ESAY=DELETE FROM `Sib_Essay_Upload` WHERE uploadEssayId = ?;
QUESTION_ID_LIKE=INSERT INTO Sib_Post_Like (`uid`,`pid`,`likePost`) VALUES (?, ?, 1);
SELECT_QUESTION=SELECT * FROM Sib_Post_Like WHERE uid = ? and pid = ? and likePost = ?;
ANSWERID_LIKE=INSERT INTO Sib_Answer_like (`uid`,`aid`,`likeAnswer`) VALUES (?,?,?);
GET_POST_ANSWER_LIST=SELECT * FROM Sib_Forum_Answer order by aid;
GET_POST_ANSWER_SUBID_LIST=SELECT * FROM Sib_Forum_Answer where pid = ? order by pid;
GET_POST_ANSWER_LIST_PN=SELECT * FROM Sib_Forum_Answer order by aid  limit ? offset ?; 
GET_POST_ANSWER_LIST_SUBID_PN= SELECT SU.userName, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFA.aid, SFA.pid, SFA.authorID, SFA.title, SFA.content, SFA.numViews, SFA.image, UNIX_TIMESTAMP(SFA.timeStamp) timeStamp, count(L.uid) countLike FROM Sib_Forum_Answer AS SFA JOIN Sib_Users AS SU ON authorID = userid LEFT JOIN Sib_Answer_like L ON (L.aid = SFA.aid AND L.likeAnswer='Y') WHERE pid = ? GROUP BY  SU.userName,SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFA.aid, SFA.pid, SFA.authorID, SFA.title, SFA.content, SFA.numViews, SFA.numReplies, SFA.image, UNIX_TIMESTAMP(SFA.timeStamp) ORDER BY aid DESC LIMIT ? OFFSET ?;
GET_POST_ANSWER_LIST_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Forum_Answer where pid = ?;
GET_POST_ANSWER_LASTEST=SELECT * FROM  Sib_Forum_Answer WHERE pid = ? ORDER BY pid DESC limit 1;
UPDATE_VIEW_POST=UPDATE Sib_Forum_Post SET numViews = (IFNULL(numViews,0) +1) WHERE pid = ?;
LIKE_POST_READ=SELECT * FROM Sib_Post_Like WHERE uid = ? and pid = ?;
UPDATE_LIKE_POST=UPDATE Sib_Post_Like SET `likePost` = (IFNULL(likePost,0)+1) WHERE pid = ? and uid = ?;
UPDATE_UNLIKE_POST=UPDATE Sib_Post_Like SET `likePost` = 0 WHERE pid = ? and uid = ?;
ONE_ANSWER_FORUM=SELECT SU.userName, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFA.aid, SFA.pid, SFA.authorID, SFA.title, SFA.content, SFA.numViews, SFA.numReplies, SFA.image, UNIX_TIMESTAMP(SFA.timeStamp) timeStamp, UNIX_TIMESTAMP(SFA.updateTime) updateTime, SFA.enableFlag, (SELECT COUNT(*) FROM Sib_Answer_like sal, Sib_Forum_Answer sfa WHERE sal.aid = sfa.aid AND likeAnswer = 'Y' AND sal.aid = SFA.aid) AS countLike FROM Sib_Forum_Answer AS SFA JOIN Sib_Users as SU ON SFA.authorID = userid WHERE pid = ? ORDER BY aid DESC limit 5;
COUNT_ANSWER_POST_INDEX=SELECT COUNT(*) AS count FROM Sib_Forum_Answer WHERE pid = ?; 
LIKE_ANSWER_READ=SELECT * FROM Sib_Answer_like WHERE uid = ? and aid = ?;
ANSWER_ID_LIKE=INSERT INTO Sib_Answer_like (`uid`, `aid`, `likeAnswer`) VALUES (?, ?, 'Y');
SELECT_ANSWER=SELECT * FROM Sib_Answer_like WHERE uid = ? and aid = ? and likeAnswer = 'Y';
UPDATE_LIKE_ANSWER=UPDATE Sib_Answer_like SET `likeAnswer` = (CASE WHEN `likeAnswer` ='Y' THEN 'N' ELSE 'Y' END) WHERE uid = ? and aid = ?;
UPDATE_UNLIKE_ANSWER=UPDATE Sib_Answer_like SET `likeAnswer` = 'N' WHERE uid = ? and aid = ?;
SUBJECT_GET_TAGS=SELECT topicId, topic, subjectId FROM Sib_Topic WHERE subjectId=?;
GET_IDSUBJECT_WITH_IDCATEGORY=SELECT ST.subjectId, SS.subject FROM Sib_Topic as ST join Sib_Subject as SS on ST.subjectId = SS.subjectId WHERE topicId=?;
ACCOMPLISHMENT_READ=SELECT * FROM Sib_Users WHERE userid = ?;
MAJOR_READ=SELECT majorId, majorName FROM Sib_Majors;
ACTIVITY_READ=SELECT activityId, activityName FROM Sib_Activity;
HELP_READ=SELECT topicId, topic, subjectId FROM Sib_Topic;
MAJOR_OF_USER=SELECT SM.majorId, SM.majorName FROM Sib_Users SU join Sib_User_Major SUM ON SU.userid = SUM.userId join Sib_Majors SM on SM.majorId = SUM.majorId WHERE SU.userid=?;
ACTIVITY_OF_USER=SELECT SA.activityId, SA.activityName FROM Sib_Users SU join Sib_User_Activity SUA ON SU.userid = SUA.userId join Sib_Activity SA on SA.activityId = SUA.activityId WHERE SU.userid = ?;
#HELP_OF_USER=SELECT ST.topicId, ST.topic FROM Sib_Users SU join Sib_User_Topic SUT ON SU.userid = SUT.userId join Sib_Topic ST on ST.topicId = SUT.topicId WHERE SU.userid = ?;
HELP_OF_USER=SELECT SS.subjectId, SS.subject FROM Sib_Users SU join Sib_User_Subject SUS ON SU.userid = SUS.userId join Sib_Subject SS on SS.subjectId = SUS.subjectId WHERE SU.userid = ?;
DELETE_USER_MAJOR=DELETE FROM Sib_User_Major WHERE userId = ?;
DELETE_USER_ACTIVITY=DELETE FROM Sib_User_Activity WHERE userId = ?;
DELETE_USER_TOPIC=DELETE FROM Sib_User_Topic WHERE userId = ?;
DELETE_USER_SUBJECT=DELETE FROM Sib_User_Subject WHERE userId = ?;
INSERT_SIB_USER_MAJOR=INSERT INTO Sib_User_Major(userId, majorId) VALUES (?, ?);
INSERT_SIB_USER_ACTIVITY=INSERT INTO Sib_User_Activity(userId, activityId) VALUES (?, ?);
INSERT_SIB_USER_TOPIC=INSERT INTO Sib_User_Topic(userId, topicId) VALUES (?, ?);
INSERT_SIB_USER_SUBJECT=INSERT INTO Sib_User_Subject(userId, subjectId) VALUES (?, ?);
UPDATE_PASSWORD= UPDATE Sib_Users SET password = ? WHERE userName = ?;
UPDATE_USER_CODE=UPDATE Sib_Users SET code = ?, timeForgot = now() WHERE userName = ?;
GET_TOKEN_FORGOT_PASSWORD=SELECT COUNT(code) as count FROM Sib_Users WHERE code = ?;
DELETE_TOKEN_FORGOT_PASSWORD=UPDATE Sib_Users SET code = ? WHERE code = ?;
SELECT_TIME_SEND_TOKEN=SELECT timeForgot FROM Sib_Users WHERE code = ?;
GET_ADDRESS_WEB=SELECT valueof FROM Sib_Config WHERE name = ?;
#GET_ADDRESS_WEB=SELECT valueof FROM Sib_Config WHERE id = 2;
GET_POLICY=SELECT policy FROM Sib_Policy WHERE policyId = 1;
GET_TERMS=SELECT terms FROM Sib_Terms WHERE termsId = 1;
CREATE_NOTIFICATION=INSERT INTO Sib_Notification(senderId, receiverId, type, title, notification, subjectId, timestamp, status, linkToId) VALUES (?, ?, ?, ?, ?, ?, now(), 'N', ?);
GET_NOTIFICATION_NOT_READED=SELECT id, SN.senderId, receiverId, type, title, notification, UNIX_TIMESTAMP(timestamp) timestamp, subjectId, linkToId, status, SU.userName, SU.firstName, SU.lastName, SU.imageUrl FROM Sib_Notification SN JOIN Sib_Users SU ON SU.userid = senderId WHERE SN.status = ? AND SN.receiverId = ? ORDER BY id DESC limit 0, 5;
GET_NOTIFICATION_NOT_READED_COUNT=SELECT COUNT(*) AS COUNT FROM Sib_Notification WHERE status = ? AND receiverId = ?;
GET_NOTIFICATION_READED=SELECT id, SN.senderId, receiverId, type, title, notification, UNIX_TIMESTAMP(timestamp) timestamp, subjectId, linkToId, status, SU.userName, SU.firstName, SU.lastName, SU.imageUrl FROM Sib_Notification SN JOIN Sib_Users SU ON SU.userid = senderId WHERE SN.status = 'Y' AND SN.receiverId = ? ORDER BY id DESC limit 0, 5;
GET_NOTIFICATION_READED_COUNT=SELECT COUNT(*) AS COUNT FROM Sib_Notification WHERE status = 'Y' AND receiverId = ?;
UPDATE_STATUS_NOTIFICATION=UPDATE Sib_Notification SET status = ? WHERE id = ?;
UPDATE_STATUS_ALL_NOTIFICATION=UPDATE Sib_Notification SET status = 'Y' WHERE receiverId = ?;
GET_ALL_NOTIFICATION=SELECT id, SN.senderId, receiverId, type, title, notification, UNIX_TIMESTAMP(timestamp) timestamp, subjectId, linkToId, status, SU.userName,SU.firstName, SU.lastName, SU.imageUrl FROM Sib_Notification SN JOIN Sib_Users SU ON SU.userid = senderId WHERE SN.receiverId = ? ORDER BY status, id DESC limit ?, ?;
GET_ALL_NOTIFICATION_COUNT=SELECT COUNT(*) AS COUNT FROM Sib_Notification WHERE receiverId = ?;
GET_LIKE_POST_BY_USER=SELECT * FROM Sib_Post_Like WHERE uid = ? AND likePost = 1;
GET_USER_POST_VIDEO=SELECT * FROM Sib_Videos WHERE vid = ?;
GET_INFO_ARTICLE=SELECT * FROM Sib_Article WHERE arId = ?;
GET_INFO_ESSAY=SELECT * FROM Sib_Essay_Upload WHERE uploadEssayId = ?;
GET_INFO_VIDEO_ADMISSION=SELECT vId, authorId, title, description, youtubeUrl, image, creationDate, idTopicSubAdmission, runningTime, numRatings, idSubAdmission FROM Sib_Video_Admission SVA join Sib_Topic_Sub_Admission STSA ON SVA.idTopicSubAdmission = STSA.id  WHERE vId = ?;
GET_VIDEOID_OF_COMMENT=SELECT * FROM Sib_Video_Comments WHERE cid = ?;
GET_VIDEO_ADMISSION_ID_OF_COMMENT=SELECT * FROM Sib_Video_Admission_Comments WHERE cid = ?;
GET_ARTICLEID_OF_COMMENT=SELECT * FROM Sib_Article_Comments WHERE cid = ?;
GET_ESSAYID_OF_COMMENT=SELECT * FROM Sib_Essay_Comments WHERE cid = ?;
GET_VIDEO_WITH_VIDEOID=SELECT * FROM Sib_Videos WHERE vid = ?;
GET_VIDEO_ADMISSION_WITH_VIDEOID=SELECT * FROM Sib_Video_Admission WHERE vId = ?;
GET_ARTICLE_WITH_ARTICLEID=SELECT * FROM Sib_Article WHERE arId = ?;
GET_ESSAY_WITH_ESSAYID=SELECT * FROM Sib_Essay_Upload WHERE uploadEssayId = ?;
GET_AUTHOR_COMMENT=SELECT * FROM Sib_Comments WHERE cid = ?;
GET_POST_WITH_POSTID=SELECT * FROM Sib_Forum_Post WHERE pid = ?;
GET_POSTID_WITH_ANSWER=SELECT * FROM Sib_Forum_Answer WHERE aid = ?;
UPDATE_ACCOMPLISHMENT_MOBILE=UPDATE Sib_Users SET accomplishments = ? WHERE userid = ?;
UPDATE_GRADE_MOBILE=UPDATE Sib_Users SET currentClass = ? WHERE userid = ?;
UPDATE_SCHOOL_MOBILE=UPDATE Sib_Users SET school = ? WHERE userid = ?;
GET_VIDEOS_LIST_BY_USER_PN = SELECT vid, title, author, authorId, v.Subject, topic, subtopic, v.description, v.image, url, runningTime, numViews, numRatings, numComments FROM Sib_Videos v, Sib_Users u WHERE v.authorID = u.userid AND u.userid = ? order by vid DESC limit ?, ?;
GET_VIDEOS_LIST_BY_USER_PN_COUNT = SELECT count(*) as COUNT FROM Sib_Videos v, Sib_Users u where v.authorID = u.userid and u.userid = ?;
UPDATE_VIDEO=UPDATE Sib_Videos SET title = ?, description = ?, subjectId = ? WHERE vid = ?;
GET_ADMISSION=SELECT * FROM Sib_Admission;
GET_SUB_ADMISSION=SELECT * FROM Sib_Sub_Admission WHERE idAdmission = ?;
GET_TOPIC_FIRST_ADMISSION=SELECT * FROM Sib_Topic_Sub_Admission WHERE idSubAdmission = ? limit 1;
GET_TOPIC_SUB_ADMISSION=SELECT STSA.id, STSA.name, STSA.idSubAdmission, SSA.name as subName, SA.name as nameAdmission FROM Sib_Topic_Sub_Admission STSA join Sib_Sub_Admission SSA ON STSA.idSubAdmission = SSA.id join Sib_Admission SA on SSA.idAdmission = SA.id WHERE idSubAdmission = ?;
GET_VIDEO_ADMISSION_PN=SELECT SVA.vId, SU.userid, SU.userName, SU.firstName, SU.lastName, SVA.youtubeUrl, SVA.title, SVA.description, SVA.image, SVA.creationDate, SVA.numRatings, SVA.runningTime FROM Sib_Video_Admission SVA join Sib_Users SU ON SVA.authorId = SU.userid WHERE idTopicSubAdmission = ? ORDER BY vId DESC;
GET_VIDEO_ADMISSION=SELECT SVA.vId, SU.userid, SU.userName, SU.firstName, SU.lastName, SVA.youtubeUrl, SVA.runningTime, SVA.title, SVA.description, SVA.image, SVA.creationDate, SVA.idTopicSubAdmission, STSA.name topicSubAdmission FROM Sib_Video_Admission SVA join Sib_Users SU ON SVA.authorId = SU.userid join Sib_Topic_Sub_Admission STSA ON STSA.id = SVA.idTopicSubAdmission WHERE idTopicSubAdmission = ? ORDER BY vId DESC;
GET_VIDEO_ADMISSION_COUNT=SELECT count(*) as COUNT FROM Sib_Video_Admission SVA join Sib_Users SU ON SVA.authorId = SU.userid WHERE SVA.authorId = SU.userid and SVA.idTopicSubAdmission = ?;
GET_ARTICLES_PN=SELECT SA.arId, SU.userid, SU.userName, SU.firstName, SU.lastName, SU.imageUrl AS imageUser, SU.idFacebook, SU.idGoogle, SA.title, SA.description, SA.image, UNIX_TIMESTAMP(SA.creationDate) as creationDate, (SELECT COUNT(*) FROM Sib_Article_Comments WHERE arId = SA.arId) as numComment FROM Sib_Article SA join Sib_Users SU ON SA.authorId = SU.userid WHERE idAdmission = ? ORDER BY arId DESC LIMIT ?, ?;
GET_ARTICLES_COUNT=SELECT count(*) as COUNT FROM Sib_Article SA join Sib_Users SU ON SA.authorId = SU.userid WHERE SA.authorId = SU.userid and SA.idAdmission = ?;
ANSWER_ARTICLE=INSERT INTO Sib_Article_Answer(authorId, content, arId) VALUES(?, ?, ?);
GET_ANSWERS_ARTICLE_PN=SELECT SAA.aId, SU.userid, SU.userName, SU.firstName, SU.lastName, SAA.content, SAA.creationDate FROM Sib_Article_Answer SAA join Sib_Users SU ON SAA.authorId = SU.userid WHERE arId = ? ORDER BY aId DESC LIMIT ?, ?;
GET_ANSWERS_ARTICLE_COUNT=SELECT count(*) as COUNT FROM Sib_Article_Answer SAA join Sib_Users SU ON SAA.authorId = SU.userid WHERE SAA.authorId = SU.userid and SAA.arId = ?;
GET_ARTICLE_DETAIL=SELECT SA.arId, SA.authorId, SA.title, SA.description, SA.image, SA.content, UNIX_TIMESTAMP(SA.createDate) as createDate, SA.idAdmission, SA.numView, SA.numRate, SA.averageRating, SU.firstName, SU.lastName,SU.userName, SU.imageUrl AS imageUser, SU.userid, SU.idFacebook, SU.idGoogle FROM Sib_Article SA join Sib_Users SU ON SA.authorId = SU.userid WHERE arId = ?;
GET_VIDEO_ADMISSION_WITH_TOPIC=SELECT SVA.vId, SVA.authorId, SVA.title, SVA.description, SVA.youtubeUrl, SVA.image, SVA.creationDate, SVA.idTopicSubAdmission, SVA.numRatings, SVA.runningTime, SVA.numViews, SU.userName,SU.firstName, SU.lastName FROM Sib_Video_Admission SVA join Sib_Users SU ON SVA.authorId = SU.userid WHERE idTopicSubAdmission = ? ORDER BY vId DESC limit 3;
GET_VIDEO_ADMISSION_DETAIL=SELECT SVA.vId, SVA.authorId, SVA.title, SVA.description, SVA.youtubeUrl, SVA.image, UNIX_TIMESTAMP(SVA.creationDate) as creationDate, SVA.idTopicSubAdmission, SVA.numRatings, SVA.runningTime, STSA.id idTopicSubAdmission, STSA.name topicSubName, SSA.id idSubAdmission, SSA.name subName, (SELECT avg(rating) FROM Sib_Video_Admission_Rating WHERE vid = SVA.vId) AS rating FROM Sib_Video_Admission SVA join Sib_Topic_Sub_Admission STSA ON SVA.idTopicSubAdmission = STSA.id join Sib_Sub_Admission SSA on SSA.id = STSA.idSubAdmission WHERE vId = ?;
GET_VIDEO_ADMISSION_VIEW_PN=SELECT SVA.vId, SU.userid, SU.userName, SU.firstName, SU.lastName, SVA.youtubeUrl, SVA.title, SVA.description, SVA.image, SVA.creationDate, SVA.numRatings, SVA.numViews, SVA.runningTime, (SELECT avg(rating) FROM Sib_Video_Admission_Rating WHERE vid = SVA.vId) AS rating FROM Sib_Video_Admission SVA join Sib_Users SU ON SVA.authorId = SU.userid WHERE idTopicSubAdmission = ? ORDER BY chapter, title LIMIT ?, ?;
UPDATE_VIEW_VIDEO_ADMISSION=UPDATE Sib_Video_Admission SET numViews = (IFNULL(numViews,0) + 1) WHERE vId = ?;
UPDATE_AVARTAR_USER=UPDATE Sib_Users SET imageUrl = ? WHERE userid = ?;
GET_AVATAR_USER=SELECT imageUrl FROM Sib_Users WHERE userid = ?;
GET_ARTICLE_BY_USER_PN=SELECT SU,userName, SU.firstName, SU.lastName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SA.arId, SA.authorId, SA.title, SA.description, SA.image, SA.numComments, SA.idAdmission, SA.content, UNIX_TIMESTAMP(SA.creationDate) creationDate FROM Sib_Article SA JOIN Sib_Users SU ON SA.authorId = SU.userid WHERE authorId = ? LIMIT ?, ?;
GET_ARTICLE_BY_USER_PN_COUNT=SELECT count(*) as COUNT FROM Sib_Article WHERE authorId = ?;
GET_ALL_ARTICLE=SELECT CONCAT(su.firstName,' ',su.lastName) author, CONCAT(su2.firstName,' ',su2.lastName) createByUser,sa.* FROM Sib_Article sa, Sib_Users su, Sib_Users su2 WHERE sa.authorId = su.userid and sa.createBy = su2.userid ORDER BY arId DESC;
DELETE_ARTICLE=DELETE FROM Sib_Article WHERE arId = ?;
GET_IMAGE_ARTICLE=SELECT image FROM Sib_Article WHERE arId = ?;
GET_IMAGE_UPLOAD_ESSAY=SELECT urlReview FROM Sib_Essay_Upload WHERE uploadEssayId = ?;
UPDATE_ARTICLE=UPDATE Sib_Article SET title = ?, description = ?, image = ?, content = ?, authorId = ?, active = ? WHERE arId = ?;
UPDATE_ARTICLE_NOT_IMAGE=UPDATE Sib_Article SET title = ?, description = ?, content = ?, , authorId = ?, active = ? WHERE arId = ?;
CREATE_ARTICLE=INSERT INTO Sib_Article(authorId, title, description, image, content, active, createBy, createDate) VALUES(?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP());
GET_ALL_TOPIC_SUB_ADMISSION=SELECT * FROM Sib_Topic_Sub_Admission;
DELETE_VIDEO_ADMISSION=DELETE FROM Sib_Video_Admission WHERE vId = ?;
GET_IMAGE_VIDEO_ADMISSION=SELECT image FROM Sib_Video_Admission WHERE vId = ?;
#MTDU
GET_LIST_ALL_VIDEO_ADMISSION=SELECT su.firstName,su.lastName, su.userName, sva.* FROM Sib_Video_Admission sva, Sib_Users su WHERE sva.authorId = su.userid;
UPDATE_VIDEO_ADMISSION=UPDATE Sib_Video_Admission SET title = ?, description = ?, image = ?, youtubeUrl = ?, active = ? WHERE vId = ?;
CREATE_VIDEO_ADMISSION=INSERT INTO Sib_Video_Admission(authorId, title, description, youtubeUrl, image, creationDate, active) VALUES(?, ?, ?, ?, ?, CURRENT_TIMESTAMP(), ?);
GET_ALL_COMMENT=SELECT * FROM Sib_Comments;
DELETE_COMMENT=DELETE FROM Sib_Comments WHERE cid = ?;
SEARCH_ALL_VIDEO_BY_USER=SELECT sv.vid, authorID, userName, firstName, lastName, title, description, image, url AS youtubeUrl, numRatings, numViews, subjectId, topicId, '' AS idTopicSubAdmission, '' AS idSubAdmission, (SELECT avg(rating) FROM Sib_Video_Rating WHERE vid = sv.vid) as rating FROM Sib_Videos sv JOIN Sib_Users ON authorID = userid WHERE authorID = ? UNION SELECT sva.vId AS vid, authorId AS authorID, userName, firstName, lastName, title, description, image, youtubeUrl, numRatings, numViews, '' AS subjectId, '' AS topicId, idTopicSubAdmission, idSubAdmission, (SELECT avg(rating) FROM Sib_Video_Admission_Rating WHERE vid = sva.vId) as rating FROM Sib_Video_Admission sva JOIN Sib_Topic_Sub_Admission ON idTopicSubAdmission = id JOIN Sib_Users ON authorId = userid WHERE authorId = ? ORDER BY numViews DESC limit ?, ?;
COUNT_SEARCH_ALL_VIDEO_BY_USER=SELECT COUNT(*) AS count FROM (SELECT vid, authorID, title, description, image, url AS youtubeUrl, numRatings, subjectId, topicId, '' AS idTopicSubAdmission FROM Sib_Videos WHERE authorID = ? UNION SELECT vId AS vid, authorId AS authorID, title, description, image, youtubeUrl, numRatings, '' AS subjectId, '' AS topicId, idTopicSubAdmission FROM Sib_Video_Admission WHERE authorId = ?) q;
SEARCH_ALL_VIDEO=SELECT sv.vid, authorID, userName, firstName, lastName, title, description, image, url AS youtubeUrl, numRatings, numViews, subjectId, topicId, '' AS idTopicSubAdmission, '' AS idSubAdmission, (SELECT avg(rating) FROM Sib_Video_Rating WHERE vid = sv.vid) as rating FROM Sib_Videos sv JOIN Sib_Users ON authorID = userid WHERE title LIKE ? OR description LIKE ? OR subject LIKE ? OR topic LIKE ? UNION SELECT sva.vId AS vid, authorId AS authorID, userName, firstName, lastName, title, description, image, youtubeUrl, numRatings, numViews, '' AS subjectId, '' AS topicId, idTopicSubAdmission, idSubAdmission, (SELECT avg(rating) FROM Sib_Video_Admission_Rating WHERE vid = sva.vId) as rating FROM Sib_Video_Admission sva JOIN Sib_Topic_Sub_Admission ON idTopicSubAdmission = id JOIN Sib_Users ON authorId = userid WHERE title LIKE ? OR description LIKE ? ORDER BY numViews DESC limit ?, ?;
COUNT_SEARCH_ALL_VIDEO=SELECT COUNT(*) AS count FROM (SELECT vid, authorID, title, description, image, url AS youtubeUrl, numRatings, subjectId, topicId, '' AS idTopicSubAdmission FROM Sib_Videos WHERE title LIKE ? OR description LIKE ? OR subject LIKE ? OR topic LIKE ? UNION SELECT vId AS vid, authorId AS authorID, title, description, image, youtubeUrl, numRatings, '' AS subjectId, '' AS topicId, idTopicSubAdmission FROM Sib_Video_Admission WHERE title LIKE ? OR description LIKE ?) q;
CREATE_ABOUT_MENTOR=INSERT INTO Sib_About_Mentor(image, description, introduce) VALUES(?, ?, ?);
GET_ALL_ABOUT_MENTOR=SELECT * FROM Sib_About_Mentor;
GET_IMAGE_ABOUT_MENTOR=SELECT image FROM Sib_About_Mentor WHERE id = ?;
DELETE_ABOUT_MENTOR=DELETE FROM Sib_About_Mentor WHERE id = ?;
UPDATE_ABOUT_MENTOR=UPDATE Sib_About_Mentor SET image = ?, description = ?, introduce = ? WHERE id = ?;
UPDATE_ABOUT_MENTOR_NOT_IMAGE=UPDATE Sib_About_Mentor SET description = ?, introduce = ? WHERE id = ?;
UPDATE_ANSWER=UPDATE Sib_Forum_Answer SET content = ? WHERE aid = ?;
UPDATE_NUMVIEW_VIDEO=UPDATE Sib_Videos SET numViews = (IFNULL(numViews,0) + 1) WHERE vid = ?;
CHECK_USER_WATCHED_VIDEO=SELECT * FROM Sib_User_Watch_Video WHERE uid = ? AND vid = ?;
UPDATE_USER_WATCHED_VIDEO=INSERT INTO Sib_User_Watch_Video(uid, vid) VALUES(?, ?);
GET_ID_VIDEO_USER_WATCHED=SELECT * FROM Sib_User_Watch_Video WHERE uid = ?;
CHECK_USER_WATCHED_VIDEO_ADMISSION=SELECT * FROM Sib_User_Watch_Video_Admission WHERE uid = ? AND vid = ?;
UPDATE_USER_WATCHED_VIDEO_ADMISSION=INSERT INTO Sib_User_Watch_Video_Admission(uid, vid) VALUES(?, ?);
GET_ID_VIDEO_ADMISSION_USER_WATCHED=SELECT * FROM Sib_User_Watch_Video_Admission WHERE uid = ?;
SIB_GET_LIST_VIDEO_TUTTORIAL_ADMISSION = SELECT sva.vId, sva.authorId, sva.title, sva.description, sva.youtubeUrl, sva.image,UNIX_TIMESTAMP(sva.creationDate) creationDate, sva.runningTime, sva.numRatings, sva.numViews, sva.averageRating, su.userName,su.firstName, su.lastName FROM Sib_Video_Admission sva, Sib_Users su WHERE sva.authorId = su.userid AND idAdmission = ?;
SIB_GET_LIST_ARTICLE_ADMISSION = SELECT sa.arId, sa.authorId, sa.title, sa.description,sa.content, sa.image, IFNULL(sa.numView,0) as numView, UNIX_TIMESTAMP(sa.createDate) as createDate, su.userName, su.firstName, su.lastName, su.imageUrl, IFNULL(averageRating,0) as averageRating, IFNULL(numRate,0) as numRate FROM Sib_Article sa, Sib_Users su WHERE sa.authorId = su.userid AND idAdmission = ?;
SIB_UPDATE_NUMVIEW_ARTICLE_ADMISSION=UPDATE Sib_Article set numView = (IFNULL(numView,0) + 1) WHERE arid = ?;
SIB_UPDATE_NUMRATING_ARTICAL = UPDATE Sib_Article set numRate = (IFNULL(numRate,0) + 1), averageRating=((IFNULL(numRate,0)*IFNULL(averageRating,0)) + ?) /(IFNULL(numRate,0) + 1)  WHERE id = ?;
SIB_INSERT_RATING_ARTICAL =  INSERT INTO Sib_Artical_Rating(aid, uid, rating) Values (?,?,?);
CHECK_USER_FORGOT_PASSWORD=SELECT userType from Sib_Users where `password` is not null and (username = ? or email = ?)
SIB_GET_ACTIVITY_LOG_ALL=SELECT id, type, action, log, logDate, logBy, linkToId FROM Sib_Activity_Log order by logDate desc;
SIB_GET_ALL_ACTIVITY_LOG_BY_USERID=SELECT id, type, action, log, UNIX_TIMESTAMP(logDate) as logDate, logBy, linkToId FROM Sib_Activity_Log WHERE logBy =? order by logDate desc;
SIB_GET_ACTIVITY_LOG_BY_USERID=SELECT id, type, action, log, UNIX_TIMESTAMP(logDate) as logDate, logBy, linkToId FROM Sib_Activity_Log WHERE logBy =? order by logDate desc limit ? offset ?;
SIB_INSERT_ACTIVITY_LOG=INSERT INTO Sib_Activity_Log(type ,action ,log ,logDate ,logBy, linkToId ) VALUES (?, ?, ?, now(), ?, ?);
SIB_UPDATE_ACTIVITY_LOG=UPDATE Sib_Activity_Log SET type = ?, action = ?, log = ?, logDate = now(), logBy = ?, linkToId = ? WHERE id = ?;
SIB_DELETE_ACTIVITY_LOG=DELETE FROM Sib_Activity_Log;
SIB_DELETE_ACTIVITY_LOG_BY_ID=DELETE FROM Sib_Activity_Log WHERE ID = ?;
MENU_ADMIN= SELECT a.id, a. name, a.action, a.description, a.displaysort, a.`status`, a.parentid FROM Sib_Menu a WHERE a.status = 'A';
GET_ALL_MENU_DATA = SELECT m.id, m. name,m.description, m.image, m.action, m.createby, m.displaysort, m.`level`, (case when m.isLeaf = '0' then 'true' else 'false' end) as isLeaf, (case when m.loaded = '0' then 'true' else 'false' end) as loaded, (case when m.expanded = '0' then 'true' else 'false' end) as expanded, m.`status`, m.usertype, concat(m.parentid,'') parentid FROM Sib_Menu m 
GET_MENU_BY_ID=SELECT a.id, a. name, a.action, a.description, a.displaysort, a.`status`, a.parentid FROM Sib_Menu a WHERE a.status = 'A';
COUNT_CHILD_MENU_BY_PARENT_ID=SELECT count(parentId) count FROM Sib_Menu a WHERE exists ( SELECT 1 FROM Sib_Menu b WHERE b.parentid=a.parentId AND b.id=? AND b. STATUS = 'A' ) AND a. STATUS = 'A';
GET_LEVEL_MENU_BY_ID=SELECT level FROM Sib_Menu a WHERE id=? AND a.status = 'A';
DELETE_MENU_DATA = DELETE FROM Sib_Menu WHERE id = ? OR parentId =? ;
INSERT_MENU_DATA = INSERT INTO Sib_Menu(name, image, description, action, usertype, displaysort, status, createDate, createBy, parentid, level,isLeaf) VALUES (?, ?, ?, ?, ?, ?, ?, now(), ?, ?,?,?);
UPDATE_MENU_DATA = UPDATE Sib_Menu set name = ?, image = ?, description = ?, status = ?, displaysort = ?, action = ?, userType=?, updateDate = now(), updateBy = ? WHERE id = ?;
UPDATE_ISLEAF_MENU = UPDATE Sib_Menu set isLeaf = ?, updateDate = now(), updateBy = ? WHERE id = ?;
# ====================================== Query for BROT-27 ==================================================
GET_NEWEST_MENTOR_ANSWER = select aid, content, numLike, UNIX_TIMESTAMP(timeStamp) from Sib_Forum_Answer where authorId = ? and enableFlag = 'Y' order by timeStamp DESC LIMIT 5;
#BROT-43
GET_VIDEOS = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.plid, x.Name as playlistname, x.subject, x.subjectId from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subjectId, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? order by timeStamp DESC LIMIT 10 OFFSET ?
GET_VIDEOS_TOP_RATED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.plid, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subjectId, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? ORDER BY a.averageRating DESC LIMIT 10 OFFSET ?
GET_VIDEOS_TOP_VIEWED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.plid, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? ORDER BY a.numViews DESC LIMIT 10 OFFSET ?
GET_NEWEST_VIDEOS_BY_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite,UNIX_TIMESTAMP(a.timeStamp) timeStamp , u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, c.subjectId, c.subject from Sib_Videos a, Sib_Users u, Sib_Category c WHERE a.subjectId = c.subjectId AND a.authorID= u.userid and a.authorID = ? and a.subjectId = ? ORDER BY a.vid DESC limit 10 offset ?
GET_TOP_VIEWED_VIDEOS_BY_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite,UNIX_TIMESTAMP(a.timeStamp) timeStamp , u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, c.subjectId, c.subject from Sib_Videos a, Sib_Users u, Sib_Category c WHERE a.subjectId = c.subjectId AND a.authorID= u.userid and a.authorID = ? and a.subjectId = ? ORDER BY a.numViews DESC limit 10 offset ?
GET_TOP_RATED_VIDEOS_BY_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite,UNIX_TIMESTAMP(a.timeStamp) timeStamp , u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, c.subjectId, c.subject from Sib_Videos a, Sib_Users u, Sib_Category c WHERE a.subjectId = c.subjectId AND a.authorID= u.userid and a.authorID = ? and a.subjectId = ? ORDER BY a.averageRating DESC limit 10 offset ?
GET_VIDEOS_RECENTLY = select a.vid, a.authorId, a.title, a.url, a.runningTime, a.image, a.url, a.description, a.averageRating, a.numRatings, a.numViews, a.averageRating, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select p.plid from Sib_PlayList_Videos p where p.vid = a.vid) as plid, s.subjectId, s.subject from Sib_Videos a , Sib_Category s where a.subjectid = s.subjectid and a.authorID = ? ORDER BY a.vid DESC LIMIT 5;
GET_VIDEOS_PLAYLIST = select p.plid,p.name from Sib_PlayList p where p.createby = ?;
GET_COUNT_PLAYLIST_BY_USER = select count(plid) count from Sib_PlayList p where p.createby = ?;
GET_STUDENT_SUBSCRIBE = select s.studentid from Sib_Student_Subcribe s where s.mentorid = ?;
UPDATE_STUDENT_SUBSCRIBE = update Sib_Student_Subcribe set newViewVideo = ? where mentorid = ? and studentid = ? and Subcribe = 'Y';
GET_SUBJECT = select s.subjectId, s.subject from Sib_Category s where s.isForum = 0;
GET_VIDEO_BY_ID = select a.vid,a.title, a.url, a.averageRating, a.numRatings, a.runningTime, a.description, a.subjectId, UNIX_TIMESTAMP(a.timeStamp) as timeStamp, c.subject, (select p.plid from Sib_PlayList_Videos p where p.vid = a.vid) as plid from Sib_Videos a, Sib_Category c where a.subjectId = c.subjectId and a.vid = ? and a.authorID = ?;
INSERT_VIDEO = insert into Sib_Videos(title, description, url, runningTime, image, subjectid, authorId, timeStamp, videoEnable) values (?, ?, ?, ?, ?, ?, ?, now(), 'Y');
INSERT_VIDEO_SUBCRIBE = insert into Sib_Video_Subcribe(vid, userid, status) values (?, ?, 'A');  
DELETE_VIDEO = delete from Sib_Videos where vid = ?;
DELETE_VIDEO_LIKE = delete from Sib_Video_Like where vid = ?;
DELETE_VIDEO_COMMENT = delete from Sib_Video_Comments where vid = ?;
DELETE_VIDEO_NOTE = delete from Sib_Video_Notes where vid = ?;
DELETE_VIDEO_RATING = delete from Sib_Video_Rating where vid = ?;
DELETE_VIDEO_SUBCRIBLE = update Sib_Student_Subcribe set newViewVideo = replace(newViewVideo, ? ,'') where mentorid = ? and studentid = ?;
DELETE_VIDEO_TAG = delete from Sib_Video_Tag where vid = ?;
DELETE_VIDEO_PLAYLIST = delete from Sib_PlayList_Videos where vid = ?;
# ======================================Query for the category =============================================
GET_ALL_CATEGORY_ADMIN = SELECT c.subjectId as id, c.subject as name, c.description, c.image, c.displaySort, c.`level`, (case when c.isLeaf = '0' then 'true' else 'false' end) as isLeaf, (case when c.loaded = '0' then 'true' else 'false' end) as loaded, (case when c.expanded = '0' then 'true' else 'false' end) as expanded, c.active, concat(c.parentid,'') parentId FROM Sib_Category c
GET_ALL_CATEGORY = SELECT c.subjectId as id, c.subject as name, c.description, c.image, c.displaySort, c.`level`, c.parentid parentId, c.isForum FROM Sib_Category c 
GET_CATEGORY_BY_ID=SELECT a.subjectId as id, a.subject, a.description, a.displaySort, a.active, a.parentId FROM Sib_Category a WHERE a.active = 'A';
COUNT_CHILD_CATEGORY_BY_PARENT_ID=SELECT count(parentId) count FROM Sib_Category a WHERE exists ( SELECT 1 FROM Sib_Category b WHERE b.parentId=a.parentId AND b.subjectId=? AND b. active = 'A' ) AND a. active = 'A';
GET_LEVEL_CATEGORY_BY_ID=SELECT level FROM Sib_Category a WHERE subjectId=? AND a.active = 'A';
DELETE_CATEGORY_DATA = DELETE FROM Sib_Category WHERE subjectId = ? OR parentId =? ;
INSERT_CATEGORY_DATA = INSERT INTO Sib_Category(subject, image, description, displaySort, active, createDate, createBy, parentId, level,isLeaf) VALUES (?, ?, ?, ?, ?, now(), ?, ?,?,?);
UPDATE_CATEGORY_DATA = UPDATE Sib_Category set subject = ?, image = ?, description = ?, active = ?, displaySort = ?, updateDate = now(), updateBy = ? WHERE subjectId = ?;
UPDATE_ISLEAF_CATEGORY = UPDATE Sib_Category set isLeaf = ?, updateDate = now(), updateBy = ? WHERE subjectId = ?;
# ====================================== Query for BROT-44 ==================================================
GET_PLAYLIST = SELECT p.plid, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) AS timeStamp, ( SELECT sum(numViews) FROM Sib_Videos v, Sib_PlayList_Videos x WHERE x.vid = v.vid AND x.plid = p.plid ) AS numViews, ( SELECT count(m.cid) FROM Sib_Video_Comments m WHERE m.vid IN ( SELECT v.vid FROM Sib_Videos v, Sib_PlayList_Videos z WHERE z.vid = v.vid AND z.plid = p.plid ) ) AS numComments, c.subjectId, c.subject, count(spv.vid) as numVideos FROM Sib_PlayList p LEFT JOIN Sib_PlayList_Videos spv on (p.plid = spv.plid and spv.`Status` = 'A'), Sib_Category c WHERE p.subjectId = c.subjectId AND p.CreateBy = ? AND p. STATUS = 'A' GROUP BY p.plid ORDER BY p.plid DESC LIMIT 10 OFFSET ?;
GET_PLAYLIST_BY_ID = SELECT p.plid, p.name, p.image, p.description, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, p.subjectId, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName FROM Sib_PlayList p, Sib_Users u WHERE p.createBy = u.userid and p.plid=? AND p.status = 'A';
INSERT_PLAYLIST = INSERT INTO Sib_PlayList(name, description, image, url, subjectId, createBy, createDate, status) VALUES (?, ?, ?, ?, ?, ?, now(), 'A');
DELETE_PLAYLIST = delete from Sib_PlayList where plid = ? and createBy = ?;
DELETE_PLAYLIST_VIDEO = delete from Sib_PlayList_Videos where plid = ?;
UPDATE_PLAYLIST = UPDATE Sib_PlayList set name = ?, UpdateDate = now(), description=?, image=?, subjectId = ? WHERE plid = ? and createBy = ?;
# ====================================== Query for BROT-70 ==================================================
GET_COUNT_SUBSCRIBERS = select count(studentid) as countSubscribers from Sib_Student_Subcribe where mentorId = ? and Subcribe = 'Y';
GET_COUNT_ANSWERS = select count(*) as numAnswers from Sib_Forum_Answer where authorid = ?;
GET_COUNT_LIKES = SELECT count(*) as numLikes FROM Sib_Forum_Answer A, Sib_Answer_like L where L.aid = A.aid AND L.likeAnswer = 'Y' and A.authorID = ?;
GET_COUNT_VIDEOS = select count(*) as numVideos from Sib_Videos where authorid = ?;
GET_MENTOR_SKILLS = select s.subjectid, c.subject from Sib_User_Subject s inner join Sib_Category c where s.subjectid = c.subjectid and userid = ?;
GET_SUBSCRIBE_STAT = select subcribe from Sib_Student_Subcribe where mentorid = ? and studentid = ?;
# ====================================== Query for BROT-71 ==================================================
GET_COUNT_QUESTION = select count(*) from Sib_Forum_Post where authorId = ? and visible is null;
GET_COUNT_SUBSCIBE = select count(*) from Sib_Student_Subcribe where studentId = ? and Subcribe = 'Y';
GET_COUNT_ESSAY = select count(*) from Sib_Essay_Upload where not (status = 'I') and userId = ? ;
UPDATE_USER_PROFILE = update Sib_Users set firstName=?, lastName=?, email=?, gender=?, school=?, accomplishments=?, dob=?, bio=?, favorite=?, defaultSubjectId=? where userid= ?;
GET_ESSAY = select e.nameOfEssay, e.docSubmittedDate, e.status, m.userName,IFNULL(m.firstName, '') firstName, IFNULL(m.lastName, '') lastName from Sib_Essay_Upload e inner join Sib_Users m where not (e.status = 'I') and e.mentorId = m.userid and e.userid = ? order by e.docSubmittedDate DESC limit ? offset ? ;
# ====================================== Query for BROT-124 ==================================================
GET_COUNT_RATINGS = select sum(numRatings) as numRatings from Sib_Videos v where authorId = ?;
GET_USER_SUBJECT = SELECT defaultSubjectId FROM Sib_Users where userid = ?;
GET_NEWEST_QUESTIONS = SELECT p.pid, p.content, UNIX_TIMESTAMP(p.timeStamp) timeStamp, c.subject, IFNULL(u.firstName,'') firstName,IFNULL(u.lastName,'') lastName, u.userName, u.imageUrl, u.userId FROM Sib_Forum_Post p, Sib_Category c, Sib_Users u where p.authorId = u.userid and p.subjectId = c.subjectId and p.subjectId 
GET_COUNT_RATINGS_CURDATE = select count(*) as numRatings from Sib_Video_Rating r, Sib_Videos v where r.vid = v.vid and v.authorId = ? and (ratetime between curdate() and current_time());
GET_COUNT_VIDEOS_CURDATE = select count(*) as numVideos from Sib_Videos where authorId = ? and (timeStamp between curdate() and current_time());
GET_COUNT_ANSWERS_CURDATE = select count(*) as numAnswers from Sib_Forum_Answer where authorId = ? and (timeStamp between curdate() and current_time());
GET_COUNT_LIKES_CURDATE = SELECT count(*) as numLikes FROM Sib_Forum_Answer A, Sib_Answer_like L where L.aid = A.aid AND L.likeAnswer = 'Y' and A.authorID = ? and (timelike between curdate() and current_time());
GET_COUNT_SUBSCRIBERS_CURDATE = select count(studentid) as countSubscribers from Sib_Student_Subcribe where mentorId = ? and Subcribe = 'Y' and (datetime between curdate() and current_time());
# ====================================== Query for BROT-126 ==================================================
GET_LATEST_COMMENTS_IN_MANAGE_VIDEO = select c.cid, c.authorid, c.content, UNIX_TIMESTAMP(c.timestamp) timestamp, v.vid, v.title, u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.imageUrl from Sib_Comments c, Sib_Videos v, Sib_Users u, Sib_Video_Comments vc where c.cid = vc.cid and vc.vid = v.vid and c.authorid = u.userid and v.authorid = ? order by c.timestamp DESC limit ? offset ?;
GET_LATEST_RATING_IN_MANAGE_VIDEO = select r.rating, u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.imageUrl, u.userid, v.vid, v.title from Sib_Video_Rating r, Sib_Users u, Sib_Videos v where r.vid =  v.vid and r.uid = u.userid and v.authorid = ? order by r.ratetime DESC limit 5;
GET_COUNT_VIEW_VIDEO = select sum(numViews) as numViews from Sib_Videos where authorID = ?;
GET_COUNT_COMMENT_VIDEO = SELECT count(*) as numComments FROM Sib_Video_Comments c, Sib_Videos v where c.vid = v.vid and v.authorId = ?;
GET_COUNT_AVG_RATING_VIDEO = select avg(averageRating) as averageRating from Sib_Videos where authorID = ?;
GET_COUNT_VIDEO_PLAYLIST = select count(*) as numPlaylist from Sib_PlayList where createBy = ?;
GET_ALL_SUBJECTS = select subjectId, subject from Sib_Category where subjectId 
SEARCH_VIDEOS = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, a.numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? 
SEARCH_VIDEOS_WITH_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, a.numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? and a.subjectId = ? 
ADD_VIDEOS_PLAYLIST = insert into Sib_PlayList_Videos (plid, vid, status) values (?, ?, 'A');
CHECK_VIDEO_IN_PLAYLIST = select * from Sib_PlayList_Videos where plid = ? and vid = ? and status = 'A'; 
# ====================================== Query for BROT-163 ==================================================
DELETE_COMMENT_VIDEO = DELETE from Sib_Video_Comments where cid = ?;
GET_PLAYLIST_INFO_OF_VIDEO = select p.plid, p.name from Sib_PlayList p, Sib_PlayList_Videos pv where p.plid = pv.plid and pv.vid = ? and pv.Status = 'A';
GET_ALL_STUDENT_SUBSCRIBED = SELECT U.userid, IFNULL(U.firstName, '') firstName, IFNULL(U.lastName, '') lastName, U.userName, U.imageUrl FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.StudentId = U.userid AND U.userType = 'S' WHERE MentorId = ? AND S.Subcribe = 'Y' ORDER BY S.datetime limit 15;
GET_ALL_PLAYLIST = select name from Sib_PlayList where CreateBy = ?;
GET_COUNT_VIDEOS_IN_PLAYLIST = select count(*) as numVideos from Sib_PlayList_Videos where plid = ? and status = 'A';
GET_PLAYLIST_BY_SUBJECT = SELECT p.plid, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, (SELECT count(vid) FROM Sib_PlayList_Videos pv WHERE pv.plid = p.plid) AS numVideos, c.subject FROM Sib_PlayList p, Sib_Category c where p.createBy = ? and p.subjectId = ? and p.subjectId = c.subjectId order by p.CreateDate DESC limit 10 offset ?;
SEARCH_PLAYLIST_MENTOR = SELECT p.plid, p.subjectId, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments,(SELECT count(vid) FROM Sib_PlayList_Videos pv WHERE pv.plid = p.plid) AS numVideos, c.subject FROM Sib_PlayList p, Sib_Category c WHERE p.createBy = ? and p.subjectId = c.subjectId AND p.status = 'A' 
SEARCH_PLAYLIST_WITH_SUBJECT = SELECT p.plid, p.subjectId, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, (SELECT count(vid) FROM Sib_PlayList_Videos pv WHERE pv.plid = p.plid) AS numVides, c.subject FROM Sib_PlayList p, Sib_Category c WHERE p.createBy = ? and p.subjectId = ? and p.subjectId = c.subjectId AND p.status = 'A'
GET_VIDEOS_NONE_PLAYLIST = SELECT a.vid, a.title, a.image, a.runningTime, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numViews, x.plid, x.name AS playlistname FROM Sib_Videos a LEFT JOIN ( SELECT b.plid, b.name, c.vid FROM Sib_PlayList b, Sib_PlayList_Videos c, Sib_Category ss WHERE b.plid = c.plid AND b.subjectId = ss.subjectId AND b.status = 'A' AND c.status = 'A' ) x ON a.vid = x.vid WHERE (x.plid != ? OR x.plid is null) AND a.authorID = ? ORDER BY a.vid DESC LIMIT 10 OFFSET ?
GET_VIDEOS_NONE_PLAYLIST_BY_SUBJECT = SELECT a.vid, a.title, a.image, a.runningTime, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numViews, x.plid, x.name AS playlistname FROM Sib_Videos a LEFT JOIN ( SELECT b.plid, b.name, c.vid FROM Sib_PlayList b, Sib_PlayList_Videos c, Sib_Category ss WHERE b.plid = c.plid AND b.subjectId = ss.subjectId AND b.status = 'A' AND c.status = 'A' ) x ON a.vid = x.vid WHERE (x.plid != ? OR x.plid is null) AND a.authorID = ? AND a.subjectId = ? ORDER BY a.vid DESC LIMIT 10 OFFSET ?
SEARCH_VIDEOS_NONE_PLAYLIST = SELECT a.vid, a.title, a.image, a.runningTime, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numViews, x.plid, x.name AS playlistname FROM Sib_Videos a LEFT JOIN ( SELECT b.plid, b.name, c.vid FROM Sib_PlayList b, Sib_PlayList_Videos c, Sib_Category ss WHERE b.plid = c.plid AND b.subjectId = ss.subjectId AND b.status = 'A' AND c.status = 'A' ) x ON a.vid = x.vid WHERE (x.plid != ? OR x.plid is null) AND a.authorID = ? 
SEARCH_VIDEOS_NONE_PLAYLIST_WITH_SUBJECT = SELECT a.vid, a.title, a.image, a.runningTime, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numViews, x.plid, x.name AS playlistname FROM Sib_Videos a LEFT JOIN ( SELECT b.plid, b.name, c.vid FROM Sib_PlayList b, Sib_PlayList_Videos c, Sib_Category ss WHERE b.plid = c.plid AND b.subjectId = ss.subjectId AND b.status = 'A' AND c.status = 'A' ) x ON a.vid = x.vid WHERE (x.plid != ? OR x.plid is null) AND a.authorID = ? and a.subjectId = ? 
GET_VIDEO_DETAIL_MENTOR = SELECT A.vid, A.title, A.url, A.runningTime, A.description, A.image, A.averageRating, U.userName, IFNULL(U.firstName, '') firstName, IFNULL(U.lastName, '') lastName, UNIX_TIMESTAMP(A.`timeStamp`) as timeStamp, A.subjectId, C.`subject`,A.numViews, (select count(*) from  Sib_Video_Comments where vid = A.vid) as numComments ,U.imageUrl avatar,( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe='Y' ) numsub,U.userid  FROM Sib_Videos A INNER JOIN Sib_Users U on A.authorID = U.userid INNER JOIN Sib_Category C on A.subjectId = C.subjectId where A.vid = ? and A.authorId = ?;
DELETE_VIDEO_IN_PLAYLIST = delete from Sib_PlayList_Videos where vid = ?;
GET_VIDEO_RELATED_MENTOR = SELECT A.vid, A.title, A.image, A.runningTime, U.userId,	IFNULL(U.firstName, '') firstName, IFNULL(U.lastName, '') lastName, U.userName, UNIX_TIMESTAMP(A.`timeStamp`) TIMESTAMP, A.subjectId, A.numViews, ( SELECT plid FROM Sib_PlayList_Videos pv WHERE pv.vid = A.vid ) AS plid, ( SELECT name FROM Sib_PlayList p, Sib_PlayList_Videos pv WHERE pv.plid = p.plid AND pv.vid = A.vid ) AS playlistname FROM	Sib_Videos A INNER JOIN Sib_Users U ON A.authorID = U.userid WHERE A.authorId = ?
# ====================================== Query for Essay ==================================================
GET_NEWEST_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where not EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? and e.status = 'W' order by e.uploadEssayId DESC limit ? offset ?; 
GET_COUNT_NEWEST_ESSAY = select count(e.uploadEssayId) numEssays from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where not EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? and e.status = 'W';
GET_PROCESSING_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u where e.schoolId = ? and e.userId = u.userId and e.status = 'P' and mentorId = ? order by e.uploadEssayId DESC limit ? offset ?;
GET_COUNT_PROCESSING_ESSAY = select count(e.uploadEssayId) numEssays from Sib_Essay_Upload e, Sib_Users u where e.schoolId = ? and e.userId = u.userId and e.status = 'P' and mentorId = ?;
GET_IGNORED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? order by e.uploadEssayId DESC limit ? offset ?;
GET_COUNT_IGNORED_ESSAY = select count(e.uploadEssayId) numEssays from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ?;
GET_REPLIED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, u.userName, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u, Sib_Essay_Comments ec, Sib_Comments c where e.schoolId = ? and e.userId = u.userId and e.status = 'R' and mentorId = ? and e.uploadEssayId = ec.eid and ec.cid = c.cid order by c.cid DESC limit ? offset ?;
GET_COUNT_REPLIED_ESSAY = select count(e.uploadEssayId) numEssays from Sib_Essay_Upload e, Sib_Users u, Sib_Essay_Comments ec, Sib_Comments c where e.schoolId = ? and e.userId = u.userId and e.status = 'R' and mentorId = ? and e.uploadEssayId = ec.eid and ec.cid = c.cid;
IGNORE_ESSAY = insert Sib_Essay_Ignore set eid = ?, mentorId = ?, createDate = now();
INSERT_COMMENT_ESSAY_WITH_FILE = Update Sib_Essay_Upload set mentorId = ?, reviewedDocument = ?, docReviewedDate = CURRENT_TIMESTAMP, rdFilesize = ?, urlReview = ?, status = 'R' where uploadEssayId = ?;
INSERT_COMMENT_ESSAY_WITHOUT_FILE = Update Sib_Essay_Upload set reviewedDocument = null, docReviewedDate = null, rdFilesize = null, urlReview = null, mentorId = ?, status = 'R' where uploadEssayId = ?;
INSERT_COMMENT_ESSAY_FK = insert Sib_Essay_Comments set eid = ?, cid = ?;
GET_COMMENT_ESSAY = select c.cid, c.content, unix_timestamp(c.timestamp) as timestamp, u.userId, u.firstName, u.lastName, u.userName, u.imageUrl, (SELECT r.rating FROM Sib_Essay_Rating r WHERE r.eid = ec.eid) as rating from Sib_Comments c, Sib_Essay_Comments ec, Sib_Users u where c.cid = ec.cid and c.authorId = u.userId and c.authorId = ? and ec.eid = ?;
GET_VIDEOS_IN_PLAYLIST=SELECT L.plid, L.`Name` AS playlistname, V.vid,U.firstName,U.lastName,U.userName,U.imageUrl,V.title, V.url, V.description,V.runningTime, V.averageRating, V.numRatings, V.numViews, (select count(*) from  Sib_Video_Comments where vid = V.vid) as numComments, UNIX_TIMESTAMP(V.timeStamp) as timeStamp,L.subjectId,U.userid ,V.image, c.subject FROM Sib_PlayList L INNER JOIN Sib_PlayList_Videos PV ON PV.plid = L.plid INNER JOIN Sib_Videos V ON PV.vid = V.vid INNER JOIN Sib_Users U ON U.userid = L.CreateBy INNER JOIN Sib_Category c ON V.subjectId = c.subjectId WHERE L.plid = ? order by V.vid DESC limit 10 offset ?
UPDATE_STATUS_ESSAY = update Sib_Essay_Upload set status = ?, mentorId = ? where uploadEssayId = ?
CANCEL_ESSAY = update Sib_Essay_Upload set status = ?, mentorId = null where uploadEssayId = ?
GET_SUGGESTION_ESSAY = select nameOfEssay from Sib_Essay_Upload where schoolId = ?
SEARCH_REPLIED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u, Sib_Essay_Comments ec, Sib_Comments c where e.schoolId = ? and e.userId = u.userId and e.status = 'R' and mentorId = ? and e.uploadEssayId = ec.eid and ec.cid = c.cid 
SEARCH_NEWEST_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where not EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? and e.status = 'W' 
SEARCH_PROCESSING_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u where e.schoolId = ? and e.userId = u.userId and e.status = 'P' and mentorId = ? 
SEARCH_IGNORED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName, '') firstName, IFNULL(u.lastName, '') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? 
GET_STATUS_ESSAY = select mentorId from Sib_Essay_Upload where uploadEssayId = ?
CREATE_QUESTION=INSERT INTO `Sib_Forum_Post` (`authorID`, `subjectId`, `content`,`imagePath`, `timeStamp`, `updateTime`) VALUES ( ?,?,?, ?, now(), now());
ADD_IMAGE_QUESTION = INSERT INTO `Sib_Post_Ask_Image`(`qid`,`image`) VALUES(?,?);
GET_ALL_CATEGORY_TOPIC = SELECT subjectId,`subject`,image,`level`,parentId, isForum from Sib_Category ORDER BY displaySort ASC
GET_ALL_QUESTION = SELECT  pid,content,UNIX_TIMESTAMP(`timeStamp`) timeStamp,subjectId,topicId FROM Sib_Forum_Post ORDER BY `timeStamp` DESC LIMIT 300;
GET_ALL_QUESTION_MENTOR_BY_SUBJ = SELECT X.* FROM (SELECT SFP.pid,UNIX_TIMESTAMP(SFP. timestamp) timestamp,  SFP.authorID, SU.firstName, SU.lastName,SU.userName, SFP.content, UNIX_TIMESTAMP(SFP.`timeStamp`) AS datetime, ( SELECT UNIX_TIMESTAMP(`timeStamp`) FROM Sib_Forum_Answer WHERE pid = SFP.pid ORDER BY aid DESC LIMIT 1 ) timeanswer,SFP.numReplies, SS.`subject`, SS.subjectId, SU.imageUrl, SFP.numViews FROM Sib_Forum_Post SFP INNER JOIN Sib_Users SU ON SFP.authorID = SU.userid INNER JOIN Sib_Category SS ON SFP.subjectId = SS.subjectId ) X WHERE 1 = 1
GET_STUDENT_SUBCRIBE = SELECT U.userid, U.firstName, U.lastName,U.userName, U.imageUrl FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON U.userid = S.StudentId AND U.userType = 'S' where S.MentorId = ? AND S.Subcribe = 'Y' 
GET_TOTAL_LIKE_VIEW_VIDEO = SELECT U.userid, sum(V.numViews) totalview, sum(V.numLike) totallike FROM Sib_Users U LEFT JOIN Sib_Videos V ON U.userid = V.authorid WHERE U.userType = 'M' AND U.userid = ? GROUP BY U.userid
GET_TOTAL_ANSWERS=SELECT U.userid, Count(*) totalanwer from Sib_Users U INNER JOIN Sib_Forum_Answer A on U.userid = A.authorID WHERE U.userid = ? AND U.userType= "M" GROUP BY U.userid
GET_TOP_MENTORS_BY_LIKE_RATE_SUBS=SELECT X.* FROM(SELECT U.userid, U.lastName, U.firstName, U.userName loginName, U.school, SCD.name as schoolName, U.imageUrl, U.isOnline, (SELECT count(authorID) FROM Sib_Answer_like L INNER JOIN Sib_Forum_Answer A ON L.aid = A.aid AND likeAnswer='Y' WHERE A.authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe = 'Y' ) numsub ,COUNT(V.vid) as numvideos ,U.defaultSubjectId, U.accomplishments, U.bio, (SELECT Count(*) from Sib_Forum_Answer WHERE authorID = U.userid ) numAnswers,AVG(V.averageRating) avgrate, SUM(V.numRatings) numRatings 
GET_VIDEOS_BY_PLAYLIST=SELECT L.plid, L.`Name` AS playlistname, V.vid,U.firstName,U.lastName,U.userName,U.imageUrl,V.title, V.url, V.description, V.averageRating, V.numRatings, V.numViews, 	V.runningTime, V.subjectId as subjectVid, (select count(*) from  Sib_Video_Comments where vid = V.vid) as numComments, UNIX_TIMESTAMP(V.timeStamp) as timeStamp,L.subjectId,U.userid ,V.image, c.subject FROM Sib_PlayList L INNER JOIN Sib_PlayList_Videos PV ON PV.plid = L.plid INNER JOIN Sib_Videos V ON PV.vid = V.vid INNER JOIN Sib_Users U ON U.userid = L.CreateBy INNER JOIN Sib_Category c ON V.subjectId = c.subjectId WHERE L.plid = ? order by V.vid DESC
CHECK_SUBSCRIBE=SELECT count(*) isSubs FROM Sib_Student_Subcribe where Subcribe='Y' AND MentorId= ?  AND StudentId=?
GET_STUDENT_POSTED = SELECT  P.PID,  U.FIRSTNAME, U.LASTNAME, U.userName,  P.AUTHORID,  P.TITLE,  P.SUBJECTID,  C. SUBJECT,  P.CONTENT,  P.NUMVIEWS,  P.NUMREPLIES,  UNIX_TIMESTAMP(P. TIMESTAMP) TIMESTAMP,  P.IMAGEPATH FROM  Sib_Forum_Post P INNER JOIN Sib_Category C ON P.subjectId = C.subjectId INNER JOIN Sib_Users U ON U.userid = P.authorID WHERE 1 = 1
GET_STUDENT_POSTED_COUNT = SELECT  COUNT(*) numquestion from Sib_Forum_Post P INNER JOIN Sib_Category C ON P.subjectId = C.subjectId WHERE 1 = 1
SUBSCRIBE_UNSUBSCRIBE_MENTOR= UPDATE Sib_Student_Subcribe set Subcribe = (CASE WHEN Subcribe ='Y' THEN 'N' ELSE 'Y' END) WHERE StudentId  = ? AND MentorId = ?
GET_POST_BY_ID=SELECT SFP.imagePath,SU.userName, SU.firstName, SU.lastName, SU.userName, SU.imageUrl, SU.idFacebook, SU.idGoogle, SFP.pid, SFP.authorID, SFP.title, SFP.subjectId, C.`subject`, SFP.content, SFP.numViews, SFP.numReplies, UNIX_TIMESTAMP(SFP. TIMESTAMP) TIMESTAMP, UNIX_TIMESTAMP(SFP.updateTime) updateTime, SFP.enableFlag FROM Sib_Forum_Post AS SFP JOIN Sib_Users AS SU ON authorID = userid INNER JOIN Sib_Category C on SFP.subjectId = C.subjectId WHERE SFP.pid = ?;
GET_ANSWER_BY_QID = SELECT X.* FROM ( SELECT A.authorID, A.content,A.imagePath imageAnswer, A.pid,U.firstName, U.lastName, U.userName, (SELECT count(*) FROM Sib_Answer_like WHERE aid = A.aid AND `likeAnswer` ='Y') numlike,(SELECT count(*) FROM Sib_Answer_like WHERE aid = A.aid AND uid = ? AND `likeAnswer` ='Y') `like`, U.imageUrl, A.aid, UNIX_TIMESTAMP(A. TIMESTAMP) TIMESTAMP, UNIX_TIMESTAMP(A.updateTime) updateTime FROM Sib_Forum_Answer AS A JOIN Sib_Users AS U ON A.authorID = U.userid WHERE A.pid = ? ) X
POST_EDIT=UPDATE Sib_Forum_Post set imagePath = ?,content=? ,subjectId = ?,`timeStamp` = current_timestamp, updateTime = current_timestamp where pid= ?
GET_VIDEODETAIL_BY_ID = SELECT A.vid, A.title, A.url, A.description, A.image, A.averageRating, U.firstName, U.lastName, U.userName,UNIX_TIMESTAMP(A.`timeStamp`) timeStamp, A.subjectId, C.`subject`,A.numViews, A.numFavourite, A.numRatings, U.imageUrl avatar,( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe='Y' ) numsub, (SELECT count(*) FROM Sib_Videos WHERE authorID = U.userid AND videoEnable = 'Y') totalVideo, (SELECT count(*) FROM Sib_Video_Comments WHERE vid = A.vid) numComments, U.userid  FROM Sib_Videos A INNER JOIN Sib_Users U on A.authorID = U.userid INNER JOIN Sib_Category C on A.subjectId = C.subjectId where A.vid = ?;
GET_COMMENT_VIDEO_BY_VID = SELECT D.cid, D.content, U.userType, U.firstName,U.lastName,U.imageUrl,U.userid, U.userName ,UNIX_TIMESTAMP(D.`timestamp`) `timestamp` from Sib_Video_Comments C INNER JOIN Sib_Comments D ON C.cid = D.cid INNER JOIN Sib_Users U ON D.authorId = U.userid where C.vid = ? ORDER BY D.`timestamp` DESC
CHECK_USER_HISTORY_VIDEO=SELECT * FROM Sib_Video_History WHERE uid = ? AND vid = ?
INSERT_HISTORY_VIDEO=INSERT INTO Sib_Video_History(uid,vid,viewtime) VALUES(?,?,now())
GET_VIDEO_BY_SUBJECTID = SELECT A.vid, A.title, A.url, A.description, A.image, A.averageRating,U.userid, U.firstName, U.lastName, U.userName, UNIX_TIMESTAMP(A.`timeStamp`) timeStamp, A.subjectId, C.`subject`,A.numViews, A.runningTime FROM Sib_Videos A INNER JOIN Sib_Users U on A.authorID = U.userid INNER JOIN Sib_Category C on A.subjectId = C.subjectId where A.subjectId = ?
UPDATE_AVG_RATE = UPDATE Sib_Videos set averageRating = (((IFNULL(numRatings,0)*IFNULL(averageRating,0)) + ?)/(IFNULL(numRatings,0) + 1)) , numRatings = (IFNULL(numRatings,0) + 1) WHERE vid = ?
UPDATE_AVG_RATE_AGAIN = UPDATE Sib_Videos set averageRating = (((IFNULL(numRatings,0)*IFNULL(averageRating,0)) + ?)/(IFNULL(numRatings,0))) WHERE vid = ?
UPDATE_NUMREPLIES_QUESTION = UPDATE Sib_Forum_Post set numreplies = (ifnull(numreplies,0) + 1),updateTime = current_timestamp where pid = ?
CREATE_ANSWER=INSERT INTO Sib_Forum_Answer(pid, authorID, content,imagePath, timeStamp, updateTime, enableFlag) VALUES (?, ?, ?,?, now(), now(), 'Y');
CHECK_VIDEO_FAVOURITE = SELECT vid num from Sib_Video_Favourite where vid =? and uid = ?
SIB_GET_USER_RATE_VIDEO=SELECT * FROM Sib_Video_Rating WHERE uid = ? AND vid = ?
GET_VIDEO_ADMISSION_DETAIL_BY_ID = SELECT A.vId vid, A.idAdmission,A.title, A.youtubeUrl url, A.description,A.averageRating , A.image, A.numRatings, A.numComments, U.firstName, U.lastName, U.userName,UNIX_TIMESTAMP(A.`creationDate`) `creationDate`, A.numViews, U.imageUrl avatar, U.userid FROM Sib_Video_Admission A INNER JOIN Sib_Users U ON A.authorID = U.userid WHERE A.vId = ?
GET_COMMENT_VIDEO_ADMISSION_BY_VID = SELECT D.content, U.firstName,U.lastName,U.userName, U.imageUrl,U.userid ,UNIX_TIMESTAMP(D.`timestamp`) `timestamp` from Sib_Video_Admission_Comments C INNER JOIN Sib_Comments D ON C.cId = D.cid INNER JOIN Sib_Users U ON D.authorId = U.userid where C.vId = ? ORDER BY D.`timestamp` DESC
UPDATE_AVG_RATE_VIDEO_ADMISSION = UPDATE Sib_Video_Admission SET averageRating = ((IFNULL(averageRating, 0) * IFNULL(numRatings, 0)) + ?) / (IFNULL(numRatings, 0) + 1), numRatings = (IFNULL(numRatings,0) + 1) WHERE	vid = ?
UPDATE_AVG_RATE_VIDEO_ADMISSION_AGAIN = UPDATE Sib_Video_Admission SET averageRating = (((IFNULL(averageRating, 0) * IFNULL(numRatings, 0)) + ?) / IFNULL(numRatings, 0)) WHERE vid = ?
GET_VIDEO_ADMISSION_BY_ADMISSION_ID = SELECT A.vId vid, A.idAdmission,A.title, A.youtubeUrl url, A.description, A.image, A.numRatings, U.firstName, U.lastName, U.userName,UNIX_TIMESTAMP(A.`creationDate`) `TIMESTAMP`, A.numViews, U.imageUrl avatar, U.userid, A.runningTime FROM Sib_Video_Admission A INNER JOIN Sib_Users U ON A.authorID = U.userid WHERE A.idAdmission = ?
SIB_NUM_REPLIES_UPDATE_DELETE=UPDATE `Sib_Forum_Post` SET `numReplies` = (IFNULL(numReplies,0) - 1) WHERE  pid = (select pid from Sib_Forum_Answer where aid = ?);
STUDENT_UPLOAD_ESSAY=INSERT INTO Sib_Essay_Upload (userId, originalDocument, docSubmittedDate, descriptionOfEssay, mimeType,urlFile,nameOfEssay,odFilesize,schoolId,majorId)  VALUES  (?, ?, CURRENT_TIMESTAMP,?, ?, ?,?,?,?,?);
GET_COL_UNIVERSITIES=SELECT sch_colle_degree_id id , `name`, type, address1, address2, city, state, zip, UNIX_TIMESTAMP(creation_date) creation_date FROM Sib_School_College_Degree;
GET_ALL_ESSAY_STUDENT=SELECT E.numRate, E.averageRating, UNIX_TIMESTAMP(E.docSubmittedDate) docSubmittedDate, E.nameOfEssay, E.descriptionOfEssay, E.STATUS, E.uploadEssayId, E.userId,U.firstName, U.lastName,U.imageUrl avatar,U.userName,UNIX_TIMESTAMP(E.docReviewedDate) docReviewedDate,U.userid mentorID FROM Sib_Essay_Upload E LEFT JOIN Sib_Users U ON E.mentorId = U.userid WHERE E.userId = ? ORDER BY E.uploadEssayId DESC
GET_MENTOR_ESSAY = SELECT U.userid, U.userName, U.firstName, U.lastName, U.accomplishments, U.school, U.defaultSubjectId, ( SELECT COUNT(*) FROM Sib_Forum_Answer WHERE userid = U.userid ) numAnswer, U.imageUrl, ( SELECT count(authorID) FROM Sib_Answer_like L INNER JOIN Sib_Forum_Answer A ON L.aid = A.aid AND likeAnswer = 'Y' WHERE A.authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe WHERE U.userid = MentorId ) numsub, ( SELECT count(*) FROM Sib_Videos WHERE U.userid = userid ) numvideos, ( SELECT AVG(averageRating) FROM Sib_Videos WHERE U.userid = userid ) avgrate FROM Sib_Users U WHERE U.userid = ?
STUDENT_UPDATE_ESSAY=UPDATE Sib_Essay_Upload SET originalDocument = ?, descriptionOfEssay= ?, mimeType = ?,urlFile =?,nameOfEssay= ?,odFilesize=?,schoolId=?,majorId= ? WHERE `uploadEssayId` = ?
STUDENT_UPDATE_ESSAY_NOFILE=UPDATE Sib_Essay_Upload SET  descriptionOfEssay= ?, nameOfEssay= ?,schoolId=?,majorId= ? WHERE `uploadEssayId` = ?
#Rate article
SIB_GET_USER_RATE_ARTICAL_ADMISSION=SELECT * FROM Sib_Article_Rating WHERE uId = ? AND arId = ?
SIB_RATE_ARTICAL_ADMISSION=INSERT INTO Sib_Article_Rating (arId, uId, rating) VALUE(?, ?, ?);
UPDATE_AVG_RATE_ARTICAL_ADMISSION = UPDATE Sib_Article SET averageRating = ((IFNULL(averageRating, 0) * IFNULL(numRate, 0)) + ?) / (IFNULL(numRate, 0) + 1), numRate = (IFNULL(numRate,0) + 1) WHERE arId = ?
UPDATE_AVG_RATE_ARTICAL_ADMISSION_AGAIN = UPDATE Sib_Article SET averageRating = (((IFNULL(averageRating, 0) * IFNULL(numRate, 0)) + ?) / IFNULL(numRate, 0)) WHERE arId = ?
SIB_RATE_UPDATE_ARTICAL_ADMISSION=UPDATE Sib_Article_Rating set rating = ? where arId = ? and uId = ?;
#RateEssay
SIB_GET_USER_RATE_ESSAY=SELECT * FROM Sib_Essay_Rating WHERE uid = ? AND eid = ?
SIB_RATE_ESSAY=INSERT INTO Sib_Essay_Rating (eid, uid, rating) VALUE(?, ?, ?);
UPDATE_AVG_RATE_ESSAY = UPDATE Sib_Essay_Upload SET averageRating = ((IFNULL(averageRating, 0) * IFNULL(numRate, 0)) + ?) / (IFNULL(numRate, 0) + 1), numRate = (IFNULL(numRate,0) + 1) WHERE uploadEssayId = ?
UPDATE_AVG_RATE_ESSAY_AGAIN = UPDATE Sib_Essay_Upload SET averageRating = (((IFNULL(averageRating, 0) * IFNULL(numRate, 0)) + ?) / IFNULL(numRate, 0)) WHERE uploadEssayId = ?
SIB_RATE_UPDATE_ESSAY=UPDATE Sib_Essay_Rating set rating = ? where eid = ? and uid = ?;
GET_NEWEST_QUESTION = SELECT Q.pid, Q.authorID, Q.title, (C.subject) subject, Q.content, Q.numViews, Q.numReplies, UNIX_TIMESTAMP(Q.timeStamp), Q.visible, Q.imagePath FROM Sib_Forum_Post Q INNER JOIN Sib_Category C ON Q.subjectId = C.subjectId AND C.active = 'A' ORDER BY timestamp DESC  LIMIT ? OFFSET ?;
GET_NEWEST_QUESTION_BY_SUBJECT = SELECT P.pid, P.authorID, C.subject, P.title, P.content, P.numViews, P.numReplies, UNIX_TIMESTAMP(P.timeStamp) time FROM Sib_Forum_Post P INNER JOIN Sib_Category C ON C.subjectId = P.subjectId INNER JOIN Sib_Users U ON U.userType = 'S' AND U.userid = P.authorID AND U.userid = ? 
GET_USER_SUBJECT = SELECT defaultSubjectId FROM Sib_Users WHERE userid = ?;
GET_VIDEO_BY_VIEW = SELECT V.vid, U.imageUrl, U.firstName, U.lastName, U.userName, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid ORDER BY numViews DESC LIMIT ? OFFSET ?;
GET_VIDEO_NEWEST = SELECT V.vid, U.imageUrl, U.firstName, U.lastName, U.userName, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid ORDER BY timeStamp DESC LIMIT ? OFFSET ?;
GET_VIDEO_VIEW_BY_SUBJECT = SELECT V.vid, U.imageUrl,U.firstName, U.lastName, U.userName, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid AND V.subjectId IN(?) ORDER BY numViews DESC LIMIT ? OFFSET ?;
GET_NEWEST_VIDEO_BY_SUBJECT = SELECT V.vid, U.imageUrl,U.firstName, U.lastName, U.userName, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V, Sib_Users U WHERE V.authorID = U.userid AND  
GET_VIDEO_BY_SUBJECT = SELECT V.vid, C.subject, U.firstName, U.lastName, U.userName, V.title, V.authorID, V.subjectId, V.description, V.image, V.url, V.runningTime, V.subjectId,  V.numViews, V.numRatings, V.numComments, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid LEFT JOIN Sib_Category C ON C.subjectId = V.subjectId  
GET_VIDEO_PLAYLIST_NEWEST = SELECT sv.vid, sv.authorID AS authorID, sv.image, sv.url, su.firstName, su.lastName, su.userName, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type, null countvid FROM Sib_Videos sv, Sib_Users su WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp. STATUS = 'A' ) AND sv.authorID = su.userid AND sv.videoEnable = 'Y' UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, su.firstName, su.lastName, su.userName, sp.`Name` title, NULL numRatings, NULL numComments, sp.subjectId, NULL averageRating, NULL numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`, NULL runningTime, '2' type, count(spv.vid) countvid FROM Sib_PlayList sp, Sib_PlayList_Videos spv, Sib_Users su WHERE sp.plid = spv.plid AND sp.CreateBy = su.userid  AND EXISTS ( SELECT 1 FROM Sib_PlayList_Videos spv WHERE sp.plid = spv.plid ) AND sp.`Status` = 'A' GROUP BY sp.plid ORDER BY TIMESTAMP DESC LIMIT ? OFFSET ?;
GET_VIDEO_PLAYLIST_NEWEST_BY_SUBJECT = SELECT sv.vid, sv.authorID AS authorID, sv.image, sv.url, su.firstName, su.lastName, su.userName, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type, null countvid FROM Sib_Videos sv, Sib_Users su WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp. STATUS = 'A' ) AND sv.authorID = su.userid AND sv.videoEnable = 'Y' AND  
GET_VIDEO_STUDENT_SUBCRIBE = SELECT S.MentorId, U.firstName,U.lastName,U.userName, U.imageUrl, V.vid, V.title, V.authorID, V.description, V.image, V.url, V.runningTime, V.subjectId, V.numViews, V.numRatings, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' INNER JOIN Sib_Videos V ON S.MentorId = V.authorID AND V.videoEnable = 'Y' WHERE S.StudentId = ? 
FIND_STUDENT_SUBCRIBE = SELECT *  FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.StudentId = U.userId  WHERE S.StudentId = ?  AND S.MentorId = ?;
SUBCRIBE_VIDEO_STUDENT = INSERT INTO Sib_Student_Subcribe (`StudentId`, `MentorId`, `Subcribe`) VALUES (?, ?, 'Y');
UN_SUBCRIBE_VIDEO_STUDENT = UPDATE Sib_Student_Subcribe SET Subcribe = 'N' WHERE StudentId = ? AND MentorId = ? ;
UPDATE_SUBCRIBE_VIDEO_STUDENT = UPDATE Sib_Student_Subcribe SET Subcribe = 'Y' WHERE StudentId = ? AND MentorId = ?;
CREATE_NOTIFICATION_SUBCRIBE= INSERT INTO Sib_Notification(userId, authorId, type, title, notification, timestamp, status) VALUES (?, ?, ?, ?, ?, now(), 'N');
GET_NAME_USER = SELECT U.firstName,U.lastName,U.userName from Sib_Users U where userId = ?;
SELECT_SUBCRIBE=SELECT * FROM Sib_Student_Subcribe WHERE StudentId = ? AND MentorId = ? AND Subcribe = 'Y';
GET_COUNT_VIDEO_WATCHED = SELECT COUNT(*) AS countOfNumbers FROM Sib_User_Watch_Video WHERE uid = ?;
GET_COUNT_VIDEO_SUBCRIBE = SELECT COUNT(*) AS countOfNumbers FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON U.userId = S.MentorId AND U.userType = 'M' WHERE StudentId = ? AND Subcribe = 'Y';
GET_COUNT_VIDEO_LIKE = SELECT COUNT(*) AS countOfNumbers FROM Sib_Video_Like WHERE uid = ?;
GET_MENTOR_SUBCRIBED = SELECT U.firstName,U.lastName,U.userName, S.MentorId FROM Sib_Student_Subcribe S Inner Join Sib_Users U ON S.MentorId = U.userid AND S.Subcribe = 'Y' WHERE S.StudentId = ?;
GET_COUNT_CATEGORY_HOME = SELECT (SELECT count(*) FROM Sib_Video_History WHERE uid = ?) as video_watched, (SELECT count(*) FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' WHERE StudentId=? AND Subcribe = 'Y') as subcribed, (SELECT count(*) FROM Sib_Video_Favourite WHERE uid=?) as video_like;
GET_VIDEO_NOT_WATCH = SELECT sv.authorID, count(*) as not_view FROM Sib_Videos as sv LEFT JOIN Sib_User_Watch_Video as suw ON sv.vid = suw.vid WHERE sv.authorID IN (SELECT S.MentorId as authorID FROM Sib_Student_Subcribe S Inner Join Sib_Users U ON S.MentorId = U.userid AND S.Subcribe = 'Y' WHERE S.StudentId = ?) AND suw.uid != ? OR suw.uid IS NULL GROUP BY sv.authorID;
GET_NEW_VIDEO_MENTOR_SUBSCRIBED = SELECT S.MentorId, U.firstName,U.lastName, U.userName, V.vid, V.title, V.authorID, V.description, V.image, V.url, V.runningTime, V.subjectId, V.numViews, V.numRatings, V.averageRating, UNIX_TIMESTAMP(V.timeStamp) timeStamp FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON S.MentorId = U.userid AND U.userType = 'M' INNER JOIN Sib_Videos V ON S.MentorId = V.authorID AND V.videoEnable = 'Y' 
GET_NEW_VIDEO_PLAYLIST_MENTOR_SUBSCRIBED_BY_SUB = SELECT sv.vid, sv.authorID AS authorID, sv.image, sv.url, su.firstName, su.lastName, su.userName,sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type, NULL countvid FROM Sib_Videos sv, Sib_Users su WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp. STATUS = 'A' ) AND sv.authorID = su.userid AND sv.videoEnable = 'Y' AND su.userid IN ( SELECT MentorId FROM Sib_Student_Subcribe 
GET_VIDEO_BY_RATING = SELECT V.authorID, V.vid, V.title, V.image, V.url, V.numViews, V.numRatings, V.averageRating, V.numComments, V.runningTime FROM Sib_Videos V ORDER BY V.numViews desc, V.numRatings desc, V.numComments desc LIMIT ? OFFSET ?;
GET_MENTOR_STUDENT_SUBSCRIBED = SELECT U.userid, U.defaultSubjectId, U.firstName, U.lastName, U.userName, U.imageUrl, U.accomplishments, UNIX_TIMESTAMP(U.dob) birthDay, SCD.`name` as schoolName, U.gender, U.bio, U.description, U.isOnline FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON U.userid = S.MentorId LEFT JOIN Sib_School_College_Degree SCD ON SCD.sch_colle_degree_id = U.school WHERE StudentId = ? AND Subcribe = 'Y' LIMIT ? OFFSET ?;
GET_COUNT_INFO_MENTOR = SELECT (SELECT count(*) FROM Sib_Forum_Answer WHERE authorID = ? AND enableFlag = 'Y') as answered, (SELECT COUNT(*) AS countSubscribed FROM Sib_Student_Subcribe S INNER JOIN Sib_Users U ON U.userId = S.MentorId AND U.userType = 'M' WHERE MentorId = ? AND Subcribe = 'Y') as subcribed, (SELECT count(*) FROM Sib_Videos WHERE authorID=?) as videos;
GET_MENTOR_SUBSCRIBED_VIDEO = SELECT SSS.MentorId, SU.imageUrl,  SU.defaultSubjectId, GROUP_CONCAT(C.subject) as subjects, SU.firstName, SU.lastName.SU.userName, IF(newViewVideo, LENGTH(newViewVideo) - LENGTH(REPLACE(newViewVideo, ',', '')) + 1, 0) AS values_count FROM Sib_Category C INNER JOIN Sib_Users SU ON FIND_IN_SET(C.subjectId, SU.defaultSubjectId) > 0 AND SU.userid IN(SELECT MentorId FROM Sib_Student_Subcribe Where StudentId = ? AND Subcribe = 'Y') AND SU.userType = 'M' INNER JOIN Sib_Student_Subcribe SSS ON (SU.userid=SSS.MentorId AND SSS.SUbcribe='Y' AND SU.userType ='M' AND SSS.StudentId = ?) GROUP BY SSS.MentorId, SU.userid, SU.imageUrl, SU.defaultSubjectId,  SU.firstName, SU.lastName, SU.userName, SSS.newViewVideo LIMIT ? OFFSET ?;
VIDEO_RECOMMENDED_FOR_YOU = SELECT U.userid, U.firstName, U.lastName, U.userName, U.imageUrl, U.defaultSubjectId, U.isOnline, V.vid, V.runningTime, V.averageRating, V.numRatings, V.numComments, V.subjectId, V.title, V.image, V.url, V.numViews, UNIX_TIMESTAMP(V.timeStamp) as timeStamp , count(sss.StudentId) as countSubscribe FROM Sib_Users  U INNER JOIN Sib_Videos V ON V.authorID = U.userid LEFT  JOIN Sib_Student_Subcribe sss ON (U.userid=sss.MentorId and sss.Subcribe='Y') WHERE NOT EXISTS(SELECT *  FROM Sib_Student_Subcribe S WHERE S.StudentId = ? AND S.Subcribe = 'Y'  AND U.userid = S.MentorId) AND U.userType='M' GROUP BY U.userid, U.firstName, U.lastName, U.userName, U.imageUrl, U.defaultSubjectId, U.isOnline, V.vid, V.runningTime, V.averageRating, V.numRatings, V.numComments,  V.subjectId, V.title, V.image, V.url, V.numViews, timeStamp  ORDER BY V.timeStamp DESC
GET_VIDEO_WITH_SUBJECT_ID = SELECT sv.vid, sv.authorID as authorID, sv.image ,sv.url, su.firstName, su.lastName,su.userName, sv.title, sv.numRatings, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv.timeStamp) `timeStamp`, sv.videoEnable  FROM Sib_Videos sv, Sib_Users su  WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid= sv.vid AND sp.status='A') AND sv.authorID=su.userid AND sv.videoEnable='Y' AND sv.subjectId = ? UNION ALL SELECT sv.vid,  sp.`CreateBy` authorID, sp.Image, sp.url, su.firstName,su.lastName,su.userName, sp.`Name` title, sp.NumRate numRatings, sp.subjectId, sp.AverageRate averageRating, sp.`NumView` numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`,sv.videoEnable FROM  Sib_PlayList sp , Sib_PlayList_Videos spv, Sib_Videos sv, Sib_Users su WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp.CreateBy=su.userid AND sv.videoEnable='Y' AND sp.`Status`='A' AND sv.subjectId = ? ORDER BY timeStamp DESC LIMIT ? OFFSET ?;
VIDEO_RECOMMENDED_FOR_YOU_WITH_SUB_ID = SELECT U.userid, U.userName, U.firstName, U.lastName, U.imageUrl, U.defaultSubjectId, V.vid, V.numViews, V.runningTime, V.averageRating,V.numRatings, V.numComments, V.subjectId, V.title, V.image, V.url, V.numViews, UNIX_TIMESTAMP(V.timeStamp) as timeStamp , count(sss.StudentId) as countSubscribe FROM Sib_Users  U INNER JOIN Sib_Videos V ON V.authorID = U.userid AND V.subjectId = ?  LEFT  JOIN Sib_Student_Subcribe sss ON (U.userid=sss.MentorId and sss.Subcribe='Y') WHERE NOT EXISTS(SELECT *  FROM Sib_Student_Subcribe S WHERE S.StudentId = ? AND S.Subcribe = 'Y'  AND U.userid = S.MentorId) AND U.userType='M' GROUP BY U.userid, U.firstName, U.lastName, U.userName, U.imageUrl, U.defaultSubjectId, V.vid, V.numViews, V.runningTime, V.averageRating, V.numRatings, V.numComments,  V.subjectId, V.title, V.image, V.url, V.numViews, timeStamp  ORDER BY V.timeStamp DESC;
GET_MENU_BY_SUBJECT = SELECT subjectId, subject FROM Sib_Category WHERE level = 0 AND isForum = 0 ORDER BY subjectId ASC;
GET_ALL_MENTOR_SUBSCRIBED = SELECT U.userid, U.firstName, U.lastName, U.userName, U.accomplishments, U.imageUrl, U.isOnline, U.defaultSubjectId, (SELECT Count(*) from Sib_Forum_Answer WHERE authorID = S.MentorId ) numAnswers, (SELECT count(*) FROM Sib_Student_Subcribe Where MentorId = U.userid AND Subcribe = 'Y') numSubs FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.MentorId = U.userid AND U.userType = 'M'WHERE StudentId = ? AND S.Subcribe = 'Y' LIMIT ?, ?;
GET_COUNT_STUDENT_SUBSCRIBED_MENTOR = SELECT count(*) count FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.MentorId = U.userid AND U.userType = 'M' WHERE StudentId = ? AND S.Subcribe = 'Y'
GET_STUDENT_SUBSCRIBED = SELECT U.userid, U.firstName, U.lastName, U.userName , U.school, SCD.name as schoolName, U.imageUrl, U.isOnline, U.defaultSubjectId FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.StudentId = U.userid AND U.userType = 'S' LEFT JOIN Sib_School_College_Degree SCD ON U.school = SCD.sch_colle_degree_id WHERE MentorId = ? AND S.Subcribe = 'Y' LIMIT ? OFFSET ?;
GET_ALL_SUBJECTID_CATEGORY = SELECT subjectId, parentId FROM Sib_Category WHERE active = 'A';
MENTOR_GET_ACTIVITY_OF_STUDENT = SELECT N.userId, U.firstName, U.lastName, U.userName, N.title, N.notification, UNIX_TIMESTAMP(N.`timestamp`) `timeStamp` FROM Sib_Notification N INNER JOIN Sib_Users U ON U.userid = N.userId WHERE N.authorId = ? ORDER BY N.timestamp DESC LIMIT ? OFFSET ?;
SEARCH_VIDEO = SELECT V.vid, V.runningTime, U.firstName, U.lastName,U.userName, V.title, V.authorID, V.image, V.url, V.averageRating, V.numComments, V.numViews, UNIX_TIMESTAMP(V.`timeStamp`) `timeStamp`, V.subjectId FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid 
SEARCH_PLAYLIST = SELECT sp.plid as pid, U.firstName, U.lastName,U.userName ,sp.`Name` as title, sp.url, sp.Description as description, sp.Image as image, sp.CreateBy as authorID, UNIX_TIMESTAMP(sp.CreateDate) as timeStamp, sp.subjectId, UNIX_TIMESTAMP(sp.UpdateDate) as timeUpdate, count(spv.vid) numVideos FROM Sib_PlayList sp, Sib_PlayList_Videos spv, Sib_Users U WHERE sp.plid = spv.plid AND sp.CreateBy = U.userid AND EXISTS ( SELECT 1 FROM Sib_PlayList_Videos spv WHERE sp.plid = spv.plid) AND sp.`Status` = 'A'
GET_ALL_VIDEO = SELECT V.vid, U.firstName,U.lastName,U.userName, V.title, V.authorID, V.image, V.averageRating, V.numComments, V.numViews, UNIX_TIMESTAMP(V.`timeStamp`) `timeStamp`, V.subjectId FROM Sib_Videos V INNER JOIN Sib_Users U ON V.authorID = U.userid WHERE V.videoEnable = 'Y';
GET_NEWEST_ANSWERS = SELECT A.aid, A.pid, A.authorID, A.content, UNIX_TIMESTAMP(A.`timeStamp`) `timeStamp`,(SELECT count(*) FROM Sib_Answer_like WHERE aid = A.aid AND likeAnswer = 'Y') numlikes FROM `Sib_Forum_Answer` A WHERE A.authorID = ? ORDER BY A.`timeStamp` DESC LIMIT ? OFFSET ?;
GET_SUBSCRIBED_FROM_MENTOR_VIEW_STUDENT = SELECT X.* FROM(SELECT U.userid, U.lastName,U.firstName,U.userName, U.imageUrl, U.isOnline, (SELECT IFNULL(SUM(numLike),0) from Sib_Forum_Answer where authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe = 'Y' ) numsub ,COUNT(V.vid) as numvideos ,U.defaultSubjectId, U.accomplishments, U.bio, (SELECT Count(*) from Sib_Forum_Answer WHERE authorID = U.userid ) numAnswers,AVG(V.averageRating) avgrate ,(SELECT count(*) isSubs FROM Sib_Student_Subcribe where Subcribe ='Y' AND  MentorId = U.userid AND StudentId =?) isSubs FROM Sib_Users U LEFT JOIN Sib_Videos V ON U.userid = V.authorID WHERE U.userType = 'M' GROUP BY U.userid, U.lastName, U.imageUrl, U.firstName, U.userName)X  ORDER BY X.numsub DESC LIMIT ? OFFSET ?;
CHECK_STUDENT_SUBSCRIBE = SELECT count(*) FROM `Sib_Student_Subcribe` Where StudentId = ? AND MentorId = ? AND Subcribe = 'Y';
ADMIN_UPDATE_PROFILE_MENTOR = UPDATE Sib_Users SET email=?, dob=?, firstName=?, lastName=?, school=?, defaultSubjectId=?, accomplishments=?, bio=?, enableFlag=? WHERE userid = ?;
SQL_CHECK_USER_EXISTS_BY_ID = SELECT userName, password FROM Sib_Users WHERE userid = ?;
UPDATE_INFO_ADMIN = UPDATE Sib_Users SET email=?, dob=?, firstName=?, lastName=?, password=?, enableFlag=? WHERE userid = ?;
SET_ENABLE_USER = UPDATE Sib_Users SET enableFlag = ? WHERE userid = ?;
UPDATE_ADMIN_INFO = UPDATE Sib_Users SET email=?, dob=?, firstName=?, lastName=?, enableFlag=? WHERE userid = ? AND userType = 'A';
GET_ALL_INFO_MENTOR_SUBSCRIBED = SELECT X.* FROM ( SELECT U.userid, U.lastName,U.firstName, U.userName loginName, U.imageUrl, U.isOnline, ( SELECT count(authorID) FROM Sib_Answer_like L INNER JOIN Sib_Forum_Answer A ON L.aid = A.aid AND likeAnswer = 'Y' WHERE A.authorID = U.userid ) numlike, ( SELECT count(*) FROM Sib_Student_Subcribe WHERE U.userid = MentorId AND Subcribe = 'Y' ) numsub, COUNT(V.vid) AS numvideos, U.defaultSubjectId, U.accomplishments, SCD.name as schoolName, U.bio, ( SELECT Count(*) FROM Sib_Forum_Answer WHERE authorID = U.userid ) numAnswers, AVG(V.averageRating) avgrate, ( SELECT count(*) isSubs FROM Sib_Student_Subcribe WHERE Subcribe = 'Y' AND MentorId = U.userid AND StudentId = ? ) isSubs FROM Sib_Users U LEFT JOIN Sib_Videos V ON U.userid = V.authorID LEFT JOIN Sib_School_College_Degree SCD ON U.school = SCD.sch_colle_degree_id WHERE U.userType = 'M' GROUP BY U.userid, U.lastName, U.imageUrl, U.firstName,U.userName ) X WHERE X.isSubs = 1 ORDER BY X.numsub DESC, X.userid LIMIT ? OFFSET ?;
GET_VIDEO_PLAYLIST_RECENTLY_UPLOAD = SELECT sv.vid, NULL vidPlaylist, sv.authorID AS authorID, sv.image, sv.url, su.firstName,su.lastName,su.userName, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type, NULL countvid FROM Sib_Videos sv, Sib_Users su WHERE NOT EXISTS ( SELECT * FROM Sib_PlayList_Videos spv, Sib_PlayList sp WHERE sp.plid = spv.plid AND spv.vid = sv.vid AND sp. STATUS = 'A' ) AND sv.authorID = su.userid AND sv.videoEnable = 'Y' AND su.userid = ? UNION ALL SELECT sp.plid, spv.vid as vidPlaylist, sp.`CreateBy` authorID, sp.Image, sp.url, su.firstName, su.lastName,su.userName, sp.`Name` title, NULL numRatings, NULL numComments, sp.subjectId, NULL averageRating, NULL numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`, NULL runningTime, '2' type, count(spv.vid) countvid FROM Sib_PlayList sp, Sib_PlayList_Videos spv, Sib_Users su WHERE sp.plid = spv.plid AND sp.CreateBy = su.userid AND EXISTS ( SELECT 1 FROM Sib_PlayList_Videos spv WHERE sp.plid = spv.plid ) AND sp.`Status` = 'A' AND su.userid = ? GROUP BY sp.plid ORDER BY TIMESTAMP DESC LIMIT ? OFFSET ?;
GET_ALL_TITLE_VIDEO_PLAYLIST = SELECT title FROM Sib_Videos WHERE videoEnable = 'Y';
SEARCH_VIDEO_PLAYLIST = SELECT sv.vid, sv.authorID AS authorID, sv.image, sv.url, su.firstName, su.lastName, su.userName, sv.title, sv.numRatings, sv.numComments, sv.subjectId, sv.averageRating, sv.numViews, UNIX_TIMESTAMP(sv. TIMESTAMP) `timeStamp`, sv.runningTime, '1' type, NULL countvid FROM Sib_Videos sv, Sib_Users su WHERE sv.authorID = su.userid AND sv.videoEnable = 'Y' AND sv.title LIKE (?) UNION ALL SELECT sp.plid, sp.`CreateBy` authorID, sp.Image, sp.url, su.firstName, su.lastName, su.userName, sp.`Name` title, NULL numRatings, NULL numComments, sp.subjectId, NULL averageRating, NULL numViews, UNIX_TIMESTAMP(CreateDate) `timeStamp`, NULL runningTime, '2' type, count(spv.vid) countvid FROM Sib_PlayList sp, Sib_PlayList_Videos spv, Sib_Users su WHERE sp.plid = spv.plid AND sp.CreateBy = su.userid AND EXISTS ( SELECT 1 FROM Sib_PlayList_Videos spv LEFT JOIN Sib_Videos sv ON sv.vid = spv.vid WHERE sp.plid = spv.plid AND ( sp.`Name` LIKE (?) OR sv.title LIKE (?) ) ) AND sp.`Status` = 'A' GROUP BY sp.plid ORDER BY title DESC LIMIT ? OFFSET ?;