MENU_ADMIN= SELECT a.id, a. name, a.action, a.description, a.displaysort, a.`status`, a.parentid FROM Sib_Menu a WHERE a.status = 'A';

GET_ALL_MENU_DATA = SELECT m.id, m. name,m.description, m.image, m.action, m.createby, m.displaysort, m.`level`, (case when m.isLeaf = '0' then 'true' else 'false' end) as isLeaf, (case when m.loaded = '0' then 'true' else 'false' end) as loaded, (case when m.expanded = '0' then 'true' else 'false' end) as expanded, m.`status`, m.usertype, concat(m.parentid,'') parentid FROM Sib_Menu m 

GET_MENU_BY_ID=SELECT a.id, a. name, a.action, a.description, a.displaysort, a.`status`, a.parentid FROM Sib_Menu a WHERE a.status = 'A';

COUNT_CHILD_MENU_BY_PARENT_ID=SELECT count(parentId) count FROM Sib_Menu a WHERE exists ( SELECT 1 FROM Sib_Menu b WHERE b.parentid=a.parentId AND b.id=? AND b. STATUS = 'A' ) AND a. STATUS = 'A';

GET_LEVEL_MENU_BY_ID=SELECT level FROM Sib_Menu a WHERE id=? AND a.status = 'A';

DELETE_MENU_DATA = DELETE FROM Sib_Menu WHERE id = ? OR parentId =? ;

INSERT_MENU_DATA = INSERT INTO Sib_Menu(name, image, description, action, usertype, displaysort, status, createDate, createBy, parentid, level,isLeaf) VALUES (?, ?, ?, ?, ?, ?, ?, now(), ?, ?,?,?);

UPDATE_MENU_DATA = UPDATE Sib_Menu set name = ?, image = ?, description = ?, status = ?, displaysort = ?, action = ?, userType=?, updateDate = now(), updateBy = ? WHERE id = ?;
#update isLeaf = false
UPDATE_ISLEAF_MENU = UPDATE Sib_Menu set isLeaf = ?, updateDate = now(), updateBy = ? WHERE id = ?;

# ====================================== Query for BROT-27 ==================================================
GET_NEWEST_MENTOR_ANSWER = select aid, content, numLike, UNIX_TIMESTAMP(timeStamp) from Sib_Forum_Answer where authorId = ? and enableFlag = 'Y' order by timeStamp DESC LIMIT 5;

#BROT-43
GET_VIDEOS = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.plid, x.Name as playlistname, x.subject, x.subjectId from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subjectId, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? order by timeStamp DESC LIMIT 10 OFFSET ?

#GET_VIDEOS_TOP_RATED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subjectId, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? ORDER BY averageRating DESC LIMIT 10 OFFSET ?

GET_VIDEOS_TOP_RATED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp from Sib_Videos a where a.authorID = ? ORDER BY averageRating DESC LIMIT 10 OFFSET ?

#GET_VIDEOS_TOP_VIEWED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? ORDER BY numViews DESC LIMIT 10 OFFSET ?

GET_VIDEOS_TOP_VIEWED = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp from Sib_Videos a where a.authorID = ? ORDER BY numViews DESC LIMIT 10 OFFSET ?

#GET_VIDEOS_BY_SUBJECT = select a.vid,a.title, a.image, a.url, a.description, a.averageRating, a.numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.plid, x.Name as playlistname, x.subject, x.subjectId from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.plid, b.Name, ss.subjectId, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? and a.subjectId = ? order by timeStamp DESC LIMIT 10 OFFSET ?

GET_VIDEOS_BY_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, (select count(*) from  Sib_Video_Comments where vid = a.vid) as numComments, a.numRatings, a.numViews, a.numFavourite,UNIX_TIMESTAMP(a.timeStamp) timeStamp , u.userName, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, c.subjectId, c.subject from Sib_Videos a, Sib_Users u, Sib_Category c WHERE a.subjectId = c.subjectId AND a.authorID= u.userid and a.authorID = ? and a.subjectId = ? ORDER BY timeStamp DESC limit 10 offset ?

GET_VIDEOS_RECENTLY = select a.vid, a.authorId, a.title, a.url, a.runningTime, a.image, a.url, a.description, a.averageRating, a.numRatings, a.numViews, a.averageRating, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp, (select p.plid from Sib_PlayList_Videos p where p.vid = a.vid) as plid, s.subjectId, s.subject from Sib_Videos a , Sib_Category s where a.subjectid = s.subjectid and a.authorID = ? ORDER BY a.vid DESC LIMIT 5;

GET_VIDEOS_PLAYLIST = select p.plid,p.name from Sib_PlayList p where p.createby = ?;

GET_STUDENT_SUBSCRIBE = select s.studentid from Sib_Student_Subcribe s where s.mentorid = ?;

UPDATE_STUDENT_SUBSCRIBE = update Sib_Student_Subcribe set newViewVideo = ? where mentorid = ? and studentid = ? and Subcribe = 'Y';

GET_SUBJECT = select s.subjectId, s.subject from Sib_Category s where s.isForum = 0;

GET_VIDEOS_BY_ID = select a.vid,a.title, a.url, a.runningTime, a.description, a.subjectId, c.subject, (select p.plid from Sib_PlayList_Videos p where p.vid = a.vid) as plid from Sib_Videos a, Sib_Category c where a.subjectId = c.subjectId and a.vid = ? and a.authorID = ?;

INSERT_VIDEO = insert into Sib_Videos(title, description, url, runningTime, image, subjectid, authorId, timeStamp, videoEnable) values (?, ?, ?, ?, ?, ?, ?, now(), 'Y');

INSERT_VIDEO_SUBCRIBE = insert into Sib_Video_Subcribe(vid, userid, status) values (?, ?, 'A');  

DELETE_VIDEO = delete from Sib_Videos where vid = ?;

DELETE_VIDEO_LIKE = delete from Sib_Video_Like where vid = ?;

DELETE_VIDEO_COMMENT = delete from Sib_Video_Comments where vid = ?;

DELETE_VIDEO_NOTE = delete from Sib_Video_Notes where vid = ?;

DELETE_VIDEO_RATING = delete from Sib_Video_Rating where vid = ?;

DELETE_VIDEO_SUBCRIBLE = update Sib_Student_Subcribe set newViewVideo = replace(newViewVideo, ? ,'') where mentorid = ? and studentid = ?;

DELETE_VIDEO_TAG = delete from Sib_Video_Tag where vid = ?;

DELETE_VIDEO_PLAYLIST = delete from Sib_PlayList_Videos where vid = ?;         

# ======================================Query for the category =============================================
GET_ALL_CATEGORY = SELECT c.subjectId as id, c.subject as name, c.description, c.image, c.displaySort, c.`level`, (case when c.isLeaf = '0' then 'true' else 'false' end) as isLeaf, (case when c.loaded = '0' then 'true' else 'false' end) as loaded, (case when c.expanded = '0' then 'true' else 'false' end) as expanded, c.active, concat(c.parentid,'') parentId FROM Sib_Category c 

GET_CATEGORY_BY_ID=SELECT a.subjectId as id, a.subject, a.description, a.displaySort, a.active, a.parentId FROM Sib_Category a WHERE a.active = 'A';

COUNT_CHILD_CATEGORY_BY_PARENT_ID=SELECT count(parentId) count FROM Sib_Category a WHERE exists ( SELECT 1 FROM Sib_Category b WHERE b.parentId=a.parentId AND b.subjectId=? AND b. active = 'A' ) AND a. active = 'A';

GET_LEVEL_CATEGORY_BY_ID=SELECT level FROM Sib_Category a WHERE subjectId=? AND a.active = 'A';

DELETE_CATEGORY_DATA = DELETE FROM Sib_Category WHERE subjectId = ? OR parentId =? ;

INSERT_CATEGORY_DATA = INSERT INTO Sib_Category(subject, image, description, displaySort, active, createDate, createBy, parentId, level,isLeaf) VALUES (?, ?, ?, ?, ?, now(), ?, ?,?,?);

UPDATE_CATEGORY_DATA = UPDATE Sib_Category set subject = ?, image = ?, description = ?, active = ?, displaySort = ?, updateDate = now(), updateBy = ? WHERE subjectId = ?;
#update isLeaf = false
UPDATE_ISLEAF_CATEGORY = UPDATE Sib_Category set isLeaf = ?, updateDate = now(), updateBy = ? WHERE subjectId = ?;

# ====================================== Query for BROT-44 ==================================================
GET_PLAYLIST = SELECT p.plid, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, c.subjectId, c.subject FROM Sib_PlayList p, Sib_Category c WHERE p.subjectId = c.subjectId and p.CreateBy= ? AND p.status = 'A' order by p.plid DESC limit 10 offset ?;

GET_PLAYLIST_BY_ID = SELECT p.plid, p.name, p.image, p.description, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, p.subjectId, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName FROM Sib_PlayList p, Sib_Users u WHERE p.createBy = u.userid and p.plid=? AND p.status = 'A';

INSERT_PLAYLIST = INSERT INTO Sib_PlayList(name, description, image, url, subjectId, createBy, createDate, status) VALUES (?, ?, ?, ?, ?, ?, now(), 'A');

DELETE_PLAYLIST = delete from Sib_PlayList where plid = ? and createBy = ?;

DELETE_PLAYLIST_VIDEO = delete from Sib_PlayList_Videos where plid = ?;

UPDATE_PLAYLIST = UPDATE Sib_PlayList set name = ?, UpdateDate = now(), description=?, image=? WHERE plid = ? and createBy = ?;

# ====================================== Query for BROT-70 ==================================================
GET_COUNT_SUBSCRIBERS = select count(studentid) as countSubscribers from Sib_Student_Subcribe where mentorId = ? and Subcribe = 'Y';

GET_COUNT_ANSWERS = select count(*) as numAnswers from Sib_Forum_Answer where authorid = ?;

GET_COUNT_LIKES = SELECT count(*) as numLikes FROM Sib_Forum_Answer A, Sib_Answer_like L where L.aid = A.aid AND L.likeAnswer = 'Y' and A.authorID = ?;

GET_COUNT_VIDEOS = select count(*) as numVideos from Sib_Videos where authorid = ?;

GET_MENTOR_SKILLS = select s.subjectid, c.subject from Sib_User_Subject s inner join Sib_Category c where s.subjectid = c.subjectid and userid = ?;

GET_SUBSCRIBE_STAT = select subcribe from Sib_Student_Subcribe where mentorid = ? and studentid = ?;

# ====================================== Query for BROT-71 ==================================================
GET_COUNT_QUESTION = select count(*) from Sib_Forum_Post where authorId = ? and visible is null;

GET_COUNT_SUBSCIBE = select count(*) from Sib_Student_Subcribe where studentId = ? and Subcribe = 'Y';

GET_COUNT_ESSAY = select count(*) from Sib_Essay_Upload where not (status = 'I') and userId = ? ;

UPDATE_USER_PROFILE = update Sib_Users set firstName=?, lastName=?, email=?, gender=?, school=?, accomplishments=?, bod=?, bio=?, favorite=?, defaultSubjectId=? where userid= ?;

GET_ESSAY = select e.nameOfEssay, e.docSubmittedDate, e.status, m.firstName, m.lastName from Sib_Essay_Upload e inner join Sib_Users m where not (e.status = 'I') and e.mentorId = m.userid and e.userid = ? order by e.docSubmittedDate DESC limit ? offset ? ;

# ====================================== Query for BROT-124 ==================================================
GET_COUNT_RATINGS = select count(*) as numRatings from Sib_Video_Rating r, Sib_Videos v where r.vid = v.vid and authorId = ?;

GET_USER_SUBJECT = SELECT defaultSubjectId FROM Sib_Users where userid = ?;

GET_NEWEST_QUESTIONS = SELECT p.pid, p.content, UNIX_TIMESTAMP(p.timeStamp) timeStamp, c.subject, CONCAT(u.firstName,' ',u.lastName) fullName, u.userName, u.imageUrl, u.userId FROM Sib_Forum_Post p, Sib_Category c, Sib_Users u where p.authorId = u.userid and p.subjectId = c.subjectId and p.subjectId 

GET_COUNT_RATINGS_CURDATE = select count(*) as numRatings from Sib_Video_Rating r, Sib_Videos v where r.vid = v.vid and v.authorId = ? and (ratetime between curdate() and current_time());

GET_COUNT_VIDEOS_CURDATE = select count(*) as numVideos from Sib_Videos where authorId = ? and (timeStamp between curdate() and current_time());

GET_COUNT_ANSWERS_CURDATE = select count(*) as numAnswers from Sib_Forum_Answer where authorId = ? and (timeStamp between curdate() and current_time());

GET_COUNT_LIKES_CURDATE = SELECT count(*) as numLikes FROM Sib_Forum_Answer A, Sib_Answer_like L where L.aid = A.aid AND L.likeAnswer = 'Y' and A.authorID = ? and (timelike between curdate() and current_time());

GET_COUNT_SUBSCRIBERS_CURDATE = select count(studentid) as countSubscribers from Sib_Student_Subcribe where mentorId = ? and Subcribe = 'Y' and (datetime between curdate() and current_time());

# ====================================== Query for BROT-126 ==================================================

GET_LATEST_COMMENTS_IN_MANAGE_VIDEO = select c.cid, c.authorid, c.content, UNIX_TIMESTAMP(c.timestamp) timestamp, v.vid, v.title, u.userName, u.firstName, u.lastName, u.imageUrl from Sib_Comments c, Sib_Videos v, Sib_Users u, Sib_Video_Comments vc where c.cid = vc.cid and vc.vid = v.vid and c.authorid = u.userid and v.authorid = ? order by c.timestamp DESC limit ? offset ?;

GET_LATEST_RATING_IN_MANAGE_VIDEO = select r.rating, u.userName, u.firstName, u.lastName, u.imageUrl, u.userid, v.title from Sib_Video_Rating r, Sib_Users u, Sib_Videos v where r.vid =  v.vid and r.uid = u.userid and v.authorid = ? order by r.ratetime DESC limit 5;

GET_COUNT_VIEW_VIDEO = select sum(numViews) as numViews from Sib_Videos where authorID = ?;

GET_COUNT_COMMENT_VIDEO = SELECT count(*) as numComments FROM Sib_Video_Comments c, Sib_Videos v where c.vid = v.vid and v.authorId = ?;

GET_COUNT_AVG_RATING_VIDEO = select avg(averageRating) as averageRating from Sib_Videos where authorID = ?;

GET_COUNT_VIDEO_PLAYLIST = select count(*) as numPlaylist from Sib_PlayList where createBy = ?;

GET_ALL_SUBJECTS = select subjectId, subject from Sib_Category where subjectId 

SEARCH_VIDEOS = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, a.numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? 

SEARCH_VIDEOS_WITH_SUBJECT = select a.vid,a.title, a.image, a.url, a.runningTime, a.description, a.averageRating, a.numComments, a.numRatings, a.numViews, a.numFavourite, UNIX_TIMESTAMP(a.timeStamp) timeStamp ,su.userName, x.Name as playlistname, x.subject from Sib_Videos a inner join Sib_Users su on a.authorID = su.userid left join ( select b.Name, ss.subject, c.vid from Sib_PlayList b , Sib_PlayList_Videos c , Sib_Category ss WHERE b.plid = c.plid AND b.subjectId= ss.subjectId AND b.status='A' AND c.Status='A' ) x ON a.vid=x.vid where a.authorID = ? and a.subjectId = ? 

ADD_VIDEOS_PLAYLIST = insert into Sib_PlayList_Videos (plid, vid, status) values (?, ?, 'A');

CHECK_VIDEO_IN_PLAYLIST = select * from Sib_PlayList_Videos where plid = ? and vid = ? and status = 'A'; 

# ====================================== Query for BROT-163 ==================================================

DELETE_COMMENT_VIDEO = DELETE from Sib_Video_Comments where cid = ?;

GET_PLAYLIST_INFO_OF_VIDEO = select p.plid, p.name from Sib_PlayList p, Sib_PlayList_Videos pv where p.plid = pv.plid and pv.vid = ? and pv.Status = 'A';

GET_ALL_STUDENT_SUBSCRIBED = SELECT U.userid, CONCAT(U.firstName, ' ', U.lastName) name , U.imageUrl FROM Sib_Users U INNER JOIN Sib_Student_Subcribe S ON S.StudentId = U.userid AND U.userType = 'S' WHERE MentorId = ? AND S.Subcribe = 'Y';

GET_ALL_PLAYLIST = select name from Sib_PlayList where CreateBy = ?;

GET_COUNT_VIDEOS_IN_PLAYLIST = select count(*) as numVideos from Sib_PlayList_Videos where plid = ? and status = 'A';

GET_PLAYLIST_BY_SUBJECT = SELECT p.plid, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, c.subject FROM Sib_PlayList p, Sib_Category c where p.createBy = ? and p.subjectId = ? and p.subjectId = c.subjectId order by p.CreateDate DESC limit 10 offset ?;

SEARCH_PLAYLIST_MENTOR = SELECT p.plid, p.subjectId, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, c.subject FROM Sib_PlayList p, Sib_Category c WHERE p.createBy = ? and p.subjectId = c.subjectId AND p.status = 'A' 

SEARCH_PLAYLIST_WITH_SUBJECT = SELECT p.plid, p.subjectId, p.name, p.image, p.url, UNIX_TIMESTAMP(p.createDate) as timeStamp, (select sum(numViews) from Sib_Videos v, Sib_PlayList_Videos x where x.vid = v.vid and x.plid = p.plid) as numViews, (select count(m.cid) from  Sib_Video_Comments m where m.vid in (select v.vid from Sib_Videos v, Sib_PlayList_Videos z where z.vid = v.vid and z.plid = p.plid)) as numComments, c.subject FROM Sib_PlayList p, Sib_Category c WHERE p.createBy = ? and p.subjectId = ? and p.subjectId = c.subjectId AND p.status = 'A'

GET_VIDEOS_NONE_PLAYLIST = select v.vid, v.image, v.runningTime, v.title, UNIX_TIMESTAMP(v.timeStamp) as timeStamp, v.numViews, (select count(*) from  Sib_Video_Comments where vid = v.vid) as numComments from Sib_Videos v where not exists (select null from Sib_PlayList_Videos pv where v.vid = pv.vid) and v.authorID = ? order by v.timeStamp DESC limit 10 offset ?; 

GET_VIDEOS_NONE_PLAYLIST_BY_SUBJECT = select v.vid, v.image, v.runningTime, v.title, UNIX_TIMESTAMP(v.timeStamp) as timeStamp, v.numViews, (select count(*) from  Sib_Video_Comments where vid = v.vid) as numComments from Sib_Videos v where not exists (select 1 from Sib_PlayList_Videos pv where v.vid = pv.vid) and v.authorID = ? and v.subjectId = ? order by v.timeStamp DESC limit 5 offset ?;

SEARCH_VIDEOS_NONE_PLAYLIST = select v.vid, v.image, v.title, v.runningTime, UNIX_TIMESTAMP(v.timeStamp) as timeStamp, v.numViews, (select count(*) from  Sib_Video_Comments where vid = v.vid) as numComments from Sib_Videos v where not exists (select 1 from Sib_PlayList_Videos pv where v.vid = pv.vid) and v.authorID = ?

SEARCH_VIDEOS_NONE_PLAYLIST_WITH_SUBJECT = select v.vid, v.image, v.title, v.runningTime, UNIX_TIMESTAMP(v.timeStamp) as timeStamp, v.numViews, (select count(*) from  Sib_Video_Comments where vid = v.vid) as numComments from Sib_Videos v where not exists (select 1 from Sib_PlayList_Videos pv where v.vid = pv.vid) and v.authorID = ? and v.subjectId = ?

GET_VIDEO_DETAIL_MENTOR = SELECT A.vid, A.title, A.url, A.runningTime, A.description, A.image, A.averageRating, IFNULL(U.firstName,'') firstName, IFNULL(U.lastName,'') lastName, UNIX_TIMESTAMP(A.`timeStamp`) as timeStamp, A.subjectId, C.`subject`,A.numViews, (select count(*) from  Sib_Video_Comments where vid = A.vid) as numComments ,U.imageUrl avatar,( SELECT count(*) FROM Sib_Student_Subcribe Where U.userid = MentorId AND Subcribe='Y' ) numsub,U.userid  FROM Sib_Videos A INNER JOIN Sib_Users U on A.authorID = U.userid INNER JOIN Sib_Category C on A.subjectId = C.subjectId where A.vid = ? and A.authorId = ?;

DELETE_VIDEO_IN_PLAYLIST = delete from Sib_PlayList_Videos where vid = ?;

GET_VIDEO_RELATED_MENTOR = SELECT A.vid, A.title, A.image, U.userId, IFNULL(U.firstName,'') firstName, IFNULL(U.lastName,'') lastName, UNIX_TIMESTAMP(A.`timeStamp`) timeStamp, A.subjectId,A.numViews FROM Sib_Videos A INNER JOIN Sib_Users U on A.authorID = U.userid where A.authorId = ?

# ====================================== Query for Essay ==================================================
 
GET_NEWEST_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where not EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? and e.status = 'W' order by e.uploadEssayId DESC limit ? offset ?; 

GET_PROCESSING_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, u.userName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u where e.schoolId = ? and e.userId = u.userId and e.status = 'P' order by e.uploadEssayId DESC limit ? offset ?;

GET_IGNORED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, u.userName, u.userId, u.imageUrl, e.schoolId from Sib_Essay_Upload e inner join Sib_Users u on e.userId = u.userid where EXISTS (select 1 from Sib_Essay_Ignore sei where sei.eid = e.uploadEssayId and sei.mentorId = ?) and e.schoolId = ? order by e.uploadEssayId DESC limit ? offset ?;

GET_REPLIED_ESSAY = select e.uploadEssayId, e.nameOfEssay, e.descriptionOfEssay, UNIX_TIMESTAMP(e.docSubmittedDate) as timeStamp, e.status, IFNULL(u.firstName,'') firstName, IFNULL(u.lastName,'') lastName, u.userName, u.userId, u.imageUrl from Sib_Essay_Upload e, Sib_Users u where e.schoolId = ? and e.userId = u.userId and e.status = 'R' order by e.uploadEssayId DESC limit ? offset ?;

GET_COMMENT_ESSAY = UPDATE Sib_Essay_Upload set status = ?, mentorId = ? where  uploadEssayId = ?;

IGNORE_ESSAY = insert Sib_Essay_Ignore set eid = ?, mentorId = ?, createDate = now();

INSERT_COMMENT_ESSAY_WITH_FILE = Update Sib_Essay_Upload set mentorId = ?, reviewedDocument = ?, docReviewedDate = CURRENT_TIMESTAMP, rdFilesize = ?, urlReview = ?, status = 'R' where uploadEssayId = ?;

INSERT_COMMENT_ESSAY_WITHOUT_FILE = Update Sib_Essay_Upload set mentorId = ?, status = 'R' where uploadEssayId = ?;

INSERT_COMMENT_ESSAY_FK = insert Sib_Essay_Comments set eid = ?, cid = ?;

GET_COMMENT_ESSAY select c.cid, c.content, unix_timestamp(c.timestamp) as timestamp from Sib_Comments c, Sib_Essay_Comments ec where c.cid = ec.cid and c.authorId = ? and ec.eid = ?;

GET_VIDEOS_IN_PLAYLIST=SELECT L.plid, L.`Name` AS playlistname, V.vid,IFNULL(U.firstName,'') firstName,IFNULL(U.lastName,'') lastName,U.imageUrl,V.title, V.url, V.description, V.averageRating, V.numViews, (select count(*) from  Sib_Video_Comments where vid = V.vid) as numComments, UNIX_TIMESTAMP(V.timeStamp) as timeStamp,L.subjectId,U.userid ,V.image, c.subject FROM Sib_PlayList L INNER JOIN Sib_PlayList_Videos PV ON PV.plid = L.plid INNER JOIN Sib_Videos V ON PV.vid = V.vid INNER JOIN Sib_Users U ON U.userid = L.CreateBy INNER JOIN Sib_Category c ON V.subjectId = c.subjectId WHERE L.plid = ? limit 10 offset ?

UPDATE_STATUS_ESSAY = update Sib_Essay_Upload set status = ?, mentorId = ? where uploadEssayId = ?

CANCEL_ESSAY = update Sib_Essay_Upload set status = ?, mentorId = null where uploadEssayId = ?